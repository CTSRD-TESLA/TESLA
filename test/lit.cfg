# vim:syntax=python

import os
import sys

import lit


#
# Basic information about this test suite.
#
config.name = 'TESLA'
config.suffixes = [ '.c', '.cpp', '.ll', '.tesla' ]
config.excludes = [ 'Inputs' ]
config.test_format = lit.formats.ShTest()

#
# Useful environment variables.
#
# This variables are optional when TESLA is installed to a standard location;
# if not, failure to set these variables will cause tests to fail building.
#
extra_cflags = [ '-g' ]     # always build tests with debug symbols
extra_cxxflags = [ '-g' ]
libdirs = []
extra_libs = []


if 'output_dir' in lit_config.params:
	config.test_exec_root = lit_config.params['output_dir']


##
## Find the 'test_support' module (which may not be in the current PYTHONPATH).
##
#sys.path.append(os.curdir)
#if tesla_src: sys.path.append(os.path.join(tesla_src, 'scripts'))
#
#try:
#	import test_support as test
#
#except ImportError, e:
#	print "Unable to find 'test_support' module!"
#	print "Try setting TESLA_SOURCE_DIR?"
#	sys.exit(1)
#
#
##
## Find LLVM tools (e.g. FileCheck).
##
#llvm_obj_root = test.llvm_config['obj-root']
#llvm_tools = os.path.join(llvm_obj_root, 'bin')
#
#
##
## Find TESLA includes and libraries.
##
#for (header, subdir) in [
#		('libtesla.h', 'include'),
#		('tesla_internal.h', os.path.join('libtesla', 'src'))
#	]:
#
#	include_dirs.append(
#		test.find_include_dir(header, [ '%s/%s' % (tesla_src, subdir) ],
#			'Try setting TESLA_SOURCE_DIR'))
#
#libtesla_dir = test.find_libdir('libtesla.*',
#	[ '%s/libtesla/src' % d for d in [ os.getcwd(), tesla_build ] ],
#	'Try setting TESLA_BUILD_DIR')
#
#libdirs.append(libtesla_dir)
#
#
##
## Set tools paths, CFLAGS, LDFLAGS, PATH, etc.
##
#clang = test.which([ 'clang33', 'clang' ])
#clangpp = test.which([ 'clang++33', 'clang++' ])
#llc = test.which([ 'llc33', 'llc' ])
#
#config.substitutions += [
#	# Tools:
#	('%clang', clang),
#	('%llc', llc),
#	('%filecheck', test.which([ 'FileCheck33', 'FileCheck' ])),
#
#	# Flags:
#	('%cflags', test.cflags(include_dirs + [ '%p/Inputs' ],
#	                        extra = extra_cflags)),
#	('%cxxflags', test.cflags(include_dirs + [ '%p/Inputs' ],
#	                          extra = extra_cxxflags)),
#	('%ldflags', test.ldflags(libdirs, [ 'tesla' ], extra_libs)),
#	('%cpp_out', test.cpp_out()),
#]
#
#config.environment['PATH'] = os.path.pathsep.join([
#	llvm_tools,
#	os.path.join(tesla_src, 'scripts'),
#	config.environment['PATH']
#])
#
#config.environment['LD_LIBRARY_PATH'] = libtesla_dir
#config.environment['TESLA_BUILD_DIR'] = tesla_build
#config.environment['TESLA_SOURCE_DIR'] = tesla_src
#config.environment['TESLA_DEBUG'] = '*'
#config.environment['CC'] = clang
#config.environment['CXX'] = clangpp
#config.environment['LLC'] = llc
