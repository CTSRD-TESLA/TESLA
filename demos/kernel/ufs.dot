/*
 * /pool/users/jra40/P4/tesla/sys/ufs/ffs/ffs_vnops.c:449#0
 */
digraph automaton_0 {
	graph [ truecolor=true, bgcolor="transparent", dpi=60, size="8,10", fontname = "Monospace", labeljust = "l", labelloc = bottom ];
	node [ shape = circle, fontname = "Monospace", style = filled, fillcolor = "white"];
	edge [ fontname = "Monospace" ];

	0 [ label = "state 0\n\"NFA:0\"\n(&#8902;)" ];
	1 [ label = "state 1\n\"NFA:1,2,3,4,5\"\n(&#8902;)" ];
	2 [ label = "state 2\n\"NFA:1,2,3,4,5,7\"\n(&#8902;)" ];
	3 [ label = "state 3\n\"NFA:1,2,3,4,5,11\"\n(vp)" ];
	4 [ label = "state 4\n\"NFA:1,2,3,4,5,27,30,120\"\n(vp)" ];
	5 [ label = "state 5\n\"NFA:144\"\n(&#8902;)", shape = doublecircle ];
	6 [ label = "state 6\n\"NFA:1,2,3,4,5,7,33\"\n(vp)" ];
	7 [ label = "state 7\n\"NFA:1,2,3,4,5,11,123\"\n(vp)" ];
	8 [ label = "state 8\n\"NFA:26,28,29,31,32,121,122\"\n(vp)" ];
	9 [ label = "state 9\n\"NFA:29,34,35\"\n(vp)" ];
	10 [ label = "state 10\n\"NFA:29,124,125\"\n(vp)" ];
	11 [ label = "state 11\n\"NFA:29,127,128\"\n(vp)" ];
	12 [ label = "state 12\n\"NFA:29,37,38\"\n(vp)" ];
	13 [ label = "state 13\n\"NFA:29,40,41\"\n(vp)" ];
	14 [ label = "state 14\n\"NFA:1,2,3,4,5,7,14\"\n(vp)" ];
	15 [ label = "state 15\n\"NFA:1,2,3,4,5,27,30,120,123\"\n(vp)" ];
	16 [ label = "state 16\n\"NFA:10,12,13,29,124,125,126\"\n(vp)" ];
	17 [ label = "state 17\n\"NFA:13,15,16,29\"\n(vp)" ];
	18 [ label = "state 18\n\"NFA:45,57,60,63,75,87,108,126,129,132\"\n(vp)" ];
	19 [ label = "state 19\n\"NFA:29,46,47,58,59,61,62,64,65,76,77,88,89,109,110,111,127,128,130,131,133,134\"\n(vp)" ];
	20 [ label = "state 20\n\"NFA:48,66,78\"\n(vp)" ];
	21 [ label = "state 21\n\"NFA:90\"\n(vp)" ];
	22 [ label = "state 22\n\"NFA:135\"\n(vp)" ];
	23 [ label = "state 23\n\"NFA:29,136,137\"\n(vp)" ];
	24 [ label = "state 24\n\"NFA:138\"\n(vp)" ];
	25 [ label = "state 25\n\"NFA:29,139,140\"\n(vp)" ];
	26 [ label = "state 26\n\"NFA:29,141\"\n(vp)" ];
	27 [ label = "state 27\n\"NFA:29,142,143\"\n(vp)" ];
	28 [ label = "state 28\n\"NFA:29,91,92\"\n(vp)" ];
	29 [ label = "state 29\n\"NFA:93\"\n(vp)" ];
	30 [ label = "state 30\n\"NFA:29,94,95\"\n(vp)" ];
	31 [ label = "state 31\n\"NFA:96\"\n(vp)" ];
	32 [ label = "state 32\n\"NFA:29,97,98\"\n(vp)" ];
	33 [ label = "state 33\n\"NFA:99\"\n(vp)" ];
	34 [ label = "state 34\n\"NFA:29,100,101,102\"\n(vp)" ];
	35 [ label = "state 35\n\"NFA:29,103,104\"\n(vp)" ];
	36 [ label = "state 36\n\"NFA:29,100,101\"\n(vp)" ];
	37 [ label = "state 37\n\"NFA:29,49,50,51,67,68,69,79,80,81\"\n(vp)" ];
	38 [ label = "state 38\n\"NFA:29,52,53,70,71,82,83\"\n(vp)" ];
	39 [ label = "state 39\n\"NFA:29,49,50,67,68,79,80\"\n(vp)" ];
	40 [ label = "state 40\n\"NFA:29,112,113,114\"\n(vp)" ];
	41 [ label = "state 41\n\"NFA:29,115,116,117\"\n(vp)" ];
	42 [ label = "state 42\n\"NFA:29,118,119\"\n(vp)" ];
	43 [ label = "state 43\n\"NFA:45,57,60,63,75,87,102,105,108,132,135,138\"\n(vp)" ];
	44 [ label = "state 44\n\"NFA:13,18,19,29\"\n(vp)" ];
	45 [ label = "state 45\n\"NFA:45,57,60,63,75,81,84,87,108,111,114,132\"\n(vp)" ];
	46 [ label = "state 46\n\"NFA:13,21,22,29\"\n(vp)" ];
	47 [ label = "state 47\n\"NFA:45,57,60,63,69,72,75,87,90,93,108,132\"\n(vp)" ];
	48 [ label = "state 48\n\"NFA:29,46,47,58,59,61,62,64,65,70,71,73,74,76,77,88,89,91,92,94,95,109,110,111,133,134\"\n(vp)" ];
	49 [ label = "state 49\n\"NFA:90,93,96\"\n(vp)" ];
	50 [ label = "state 50\n\"NFA:29,91,92,94,95,97,98\"\n(vp)" ];
	51 [ label = "state 51\n\"NFA:93,96\"\n(vp)" ];
	52 [ label = "state 52\n\"NFA:29,94,95,97,98\"\n(vp)" ];
	53 [ label = "state 53\n\"NFA:29,46,47,58,59,61,62,64,65,76,77,82,83,85,86,88,89,109,110,111,112,113,114,115,116,117,133,134\"\n(vp)" ];
	54 [ label = "state 54\n\"NFA:29,112,113,114,115,116,117,118,119\"\n(vp)" ];
	55 [ label = "state 55\n\"NFA:29,115,116,117,118,119\"\n(vp)" ];
	56 [ label = "state 56\n\"NFA:29,46,47,58,59,61,62,64,65,76,77,88,89,103,104,106,107,109,110,111,133,134,136,137,139,140\"\n(vp)" ];
	57 [ label = "state 57\n\"NFA:29,135,138,141\"\n(vp)" ];
	58 [ label = "state 58\n\"NFA:29,136,137,139,140,142,143\"\n(vp)" ];
	59 [ label = "state 59\n\"NFA:29,138,141\"\n(vp)" ];
	60 [ label = "state 60\n\"NFA:29,139,140,142,143\"\n(vp)" ];
	61 [ label = "state 61\n\"NFA:26,28,29,31,32,121,122,124,125,126\"\n(vp)" ];
	62 [ label = "state 62\n\"NFA:1,2,3,4,5,11,14\"\n(vp)" ];
	63 [ label = "state 63\n\"NFA:1,2,3,4,5,27,29,30,33,99,120,141\"\n(vp)" ];
	64 [ label = "state 64\n\"NFA:8,13,15,16,17,29\"\n(vp)" ];
	65 [ label = "state 65\n\"NFA:6,9,13,20,29\"\n(vp)" ];
	66 [ label = "state 66\n\"NFA:17\"\n(vp)" ];
	67 [ label = "state 67\n\"NFA:36,45,57,60,63,75,78,87,102,105,108,117,132,135,138\"\n(vp)" ];
	68 [ label = "state 68\n\"NFA:29,37,38,46,47,58,59,61,62,64,65,76,77,79,80,81,88,89,103,104,106,107,109,110,111,118,119,133,134,136,137,139,140\"\n(vp)" ];
	69 [ label = "state 69\n\"NFA:39,90\"\n(vp)" ];
	70 [ label = "state 70\n\"NFA:29,40,41,91,92\"\n(vp)" ];
	71 [ label = "state 71\n\"NFA:29,82,83,112,113,114\"\n(vp)" ];
	72 [ label = "state 72\n\"NFA:20\"\n(vp)" ];
	73 [ label = "state 73\n\"NFA:78,117\"\n(vp)" ];
	74 [ label = "state 74\n\"NFA:29,79,80,81,118,119\"\n(vp)" ];
	75 [ label = "state 75\n\"NFA:29,82,83\"\n(vp)" ];
	76 [ label = "state 76\n\"NFA:66,96\"\n(vp)" ];
	77 [ label = "state 77\n\"NFA:29,67,68,69,97,98\"\n(vp)" ];
	78 [ label = "state 78\n\"NFA:29,70,71\"\n(vp)" ];
	79 [ label = "state 79\n\"NFA:13,20,23,29\"\n(vp)" ];
	80 [ label = "state 80\n\"NFA:39,42,45,57,60,63,66,75,87,96,108,132\"\n(vp)" ];
	81 [ label = "state 81\n\"NFA:29,40,41,43,44,46,47,58,59,61,62,64,65,67,68,69,76,77,88,89,97,98,109,110,111,133,134\"\n(vp)" ];
	82 [ label = "state 82\n\"NFA:48,66,78,99\"\n(vp)" ];
	83 [ label = "state 83\n\"NFA:29,49,50,51,67,68,69,79,80,81,100,101,102\"\n(vp)" ];
	84 [ label = "state 84\n\"NFA:29,52,53,70,71,82,83,103,104\"\n(vp)" ];
	85 [ label = "state 85\n\"NFA:29,49,50,67,68,79,80,100,101\"\n(vp)" ];
	86 [ label = "state 86\n\"NFA:29,70,71,112,113,114\"\n(vp)" ];
	87 [ label = "state 87\n\"NFA:45,48,57,60,63,66,75,87,96,108,132\"\n(vp)" ];
	88 [ label = "state 88\n\"NFA:13,21,22,24,25,29\"\n(vp)" ];
	89 [ label = "state 89\n\"NFA:45,51,54,57,60,63,69,72,75,87,90,93,108,132\"\n(vp)" ];
	90 [ label = "state 90\n\"NFA:29,46,47,52,53,55,56,58,59,61,62,64,65,70,71,73,74,76,77,88,89,91,92,94,95,109,110,111,133,134\"\n(vp)" ];
	91 [ label = "state 91\n\"NFA:29,46,47,49,50,51,58,59,61,62,64,65,67,68,69,76,77,88,89,97,98,109,110,111,133,134\"\n(vp)" ];
	92 [ label = "state 92\n\"NFA:29,52,53,70,71,112,113,114\"\n(vp)" ];
	93 [ label = "state 93\n\"NFA:26,28,29,31,32,34,35,36,100,101,102,121,122,142,143\"\n(vp)" ];
	94 [ label = "state 94\n\"NFA:29,37,38,103,104\"\n(vp)" ];
	95 [ label = "state 95\n\"NFA:39\"\n(vp)" ];
	96 [ label = "state 96\n\"NFA:1,2,3,4,5,27,29,30,99,120,123,141\"\n(vp)" ];
	97 [ label = "state 97\n\"NFA:10,12,13,15,16,17,29\"\n(vp)" ];
	98 [ label = "state 98\n\"NFA:45,57,60,63,75,78,87,102,105,108,117,126,129,132,135,138\"\n(vp)" ];
	99 [ label = "state 99\n\"NFA:29,46,47,58,59,61,62,64,65,76,77,79,80,81,88,89,103,104,106,107,109,110,111,118,119,127,128,130,131,133,134,136,137,139,140\"\n(vp)" ];
	100 [ label = "state 100\n\"NFA:26,28,29,31,32,100,101,102,121,122,124,125,126,142,143\"\n(vp)" ];
	101 [ label = "state 101\n\"NFA:29,103,104,127,128\"\n(vp)" ];
	102 [ label = "state 102\n\"NFA:1,2,3,4,5,27,30,33,120\"\n(vp)" ];
	103 [ label = "state 103\n\"NFA:8,29,34,35,36\"\n(vp)" ];
	104 [ label = "state 104\n\"NFA:6,9,13,29,39\"\n(vp)" ];
	105 [ label = "state 105\n\"NFA:36\"\n(vp)" ];
	106 [ label = "state 106\n\"NFA:39,42,45,57,60,63,75,87,108,132\"\n(vp)" ];
	107 [ label = "state 107\n\"NFA:29,40,41,43,44,46,47,58,59,61,62,64,65,76,77,88,89,109,110,111,133,134\"\n(vp)" ];
	108 [ label = "state 108\n\"NFA:26,28,29,31,32,34,35,36,121,122\"\n(vp)" ];
	109 [ label = "state 109\n\"NFA:10,12,13,29\"\n(vp)" ];
	110 [ label = "state 110\n\"NFA:8\"\n(vp)" ];
	111 [ label = "state 111\n\"NFA:6,9,13,29\"\n(vp)" ];

	/*
	 * amd64_syscall(X,X): Entry (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Entry)\n&laquo;init&raquo;",
		color = "/dark28/1", fontcolor = "/dark28/1" ];
	0 -> 1;

	/*
	 * ufs_readdir(X): Entry (Callee)
	 */
	edge [ label = "ufs_readdir(&#8902;)\n(Entry)",
		color = "/dark28/2", fontcolor = "/dark28/2" ];
	18 -> 22;
	57 -> 59;
	59 -> 26;
	102 -> 6;
	81 -> 23;
	19 -> 23;
	87 -> 22;
	45 -> 22;
	67 -> 57;
	4 -> 6;
	109 -> 17;
	43 -> 57;
	2 -> 2;
	7 -> 14;
	60 -> 27;
	68 -> 58;
	98 -> 57;
	100 -> 9;
	63 -> 6;
	107 -> 23;
	89 -> 22;
	80 -> 22;
	96 -> 6;
	22 -> 24;
	108 -> 9;
	6 -> 2;
	93 -> 9;
	99 -> 58;
	53 -> 23;
	23 -> 25;
	106 -> 22;
	97 -> 17;
	25 -> 27;
	91 -> 23;
	3 -> 14;
	24 -> 26;
	1 -> 2;
	47 -> 22;
	14 -> 2;
	58 -> 60;
	90 -> 23;
	16 -> 17;
	8 -> 9;
	62 -> 14;
	15 -> 6;
	56 -> 58;
	61 -> 9;
	48 -> 23;

	/*
	 * ufs_readdir(X) == X (Callee)
	 */
	edge [ label = "ufs_readdir(&#8902;) == &#8902;",
		color = "/dark28/3", fontcolor = "/dark28/3" ];
	68 -> 70;
	69 -> 29;
	21 -> 29;
	43 -> 21;
	64 -> 65;
	66 -> 72;
	105 -> 95;
	7 -> 1;
	91 -> 28;
	29 -> 31;
	51 -> 31;
	1 -> 1;
	80 -> 21;
	18 -> 21;
	96 -> 1;
	99 -> 28;
	50 -> 52;
	98 -> 21;
	4 -> 1;
	62 -> 1;
	45 -> 21;
	90 -> 50;
	6 -> 1;
	30 -> 32;
	102 -> 1;
	93 -> 95;
	70 -> 30;
	89 -> 49;
	53 -> 28;
	108 -> 95;
	2 -> 1;
	3 -> 1;
	48 -> 50;
	110 -> 111;
	15 -> 1;
	107 -> 28;
	103 -> 104;
	12 -> 13;
	56 -> 28;
	63 -> 1;
	87 -> 21;
	44 -> 46;
	81 -> 28;
	19 -> 28;
	97 -> 72;
	94 -> 13;
	49 -> 51;
	67 -> 69;
	52 -> 32;
	28 -> 30;
	47 -> 49;
	106 -> 21;
	14 -> 1;

	/*
	 * vn_rdwr(X,vp,X,X,X,X,4096,X,X,X,X): Entry (Callee)
	 */
	edge [ label = "vn_rdwr(&#8902;,vp,&#8902;,&#8902;,&#8902;,&#8902;,4096,&#8902;,&#8902;,&#8902;,&#8902;)\n(Entry)",
		color = "/dark28/4", fontcolor = "/dark28/4" ];
	76 -> 33;
	67 -> 20;
	103 -> 66;
	87 -> 82;
	100 -> 10;
	111 -> 79;
	1 -> 3;
	50 -> 36;
	14 -> 62;
	63 -> 7;
	2 -> 62;
	8 -> 10;
	45 -> 20;
	81 -> 85;
	90 -> 39;
	96 -> 7;
	65 -> 79;
	53 -> 39;
	68 -> 39;
	80 -> 82;
	91 -> 85;
	99 -> 39;
	98 -> 20;
	6 -> 62;
	4 -> 7;
	102 -> 7;
	104 -> 79;
	48 -> 39;
	15 -> 7;
	89 -> 20;
	108 -> 10;
	107 -> 39;
	3 -> 3;
	106 -> 20;
	19 -> 39;
	62 -> 3;
	64 -> 66;
	77 -> 36;
	110 -> 66;
	93 -> 10;
	18 -> 20;
	51 -> 33;
	7 -> 3;
	47 -> 20;
	52 -> 36;
	49 -> 33;
	61 -> 10;
	32 -> 36;
	56 -> 39;
	31 -> 33;
	43 -> 20;

	/*
	 * mac_vnode_check_read(X,X,vp) == 0 (Callee)
	 */
	edge [ label = "mac_vnode_check_read(&#8902;,&#8902;,vp) == 0",
		color = "/dark28/5", fontcolor = "/dark28/5" ];
	104 -> 106;
	109 -> 18;
	6 -> 102;
	7 -> 15;
	72 -> 76;
	103 -> 105;
	3 -> 15;
	14 -> 63;
	96 -> 4;
	66 -> 73;
	44 -> 45;
	65 -> 80;
	16 -> 18;
	102 -> 4;
	2 -> 102;
	15 -> 4;
	88 -> 89;
	62 -> 96;
	1 -> 4;
	4 -> 4;
	63 -> 4;
	46 -> 47;
	111 -> 106;
	110 -> 105;
	17 -> 43;
	97 -> 98;
	64 -> 67;
	79 -> 87;

	/*
	 * amd64_syscall(X,X): Exit (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Exit)\n&laquo;cleanup&raquo;",
		color = "/dark28/6", fontcolor = "/dark28/6" ];
	15 -> 5;
	70 -> 5;
	3 -> 5;
	4 -> 5;
	17 -> 5;
	41 -> 5;
	92 -> 5;
	48 -> 5;
	75 -> 5;
	83 -> 5;
	6 -> 5;
	65 -> 5;
	93 -> 5;
	7 -> 5;
	52 -> 5;
	68 -> 5;
	59 -> 5;
	61 -> 5;
	77 -> 5;
	56 -> 5;
	85 -> 5;
	96 -> 5;
	109 -> 5;
	97 -> 5;
	37 -> 5;
	13 -> 5;
	27 -> 5;
	38 -> 5;
	101 -> 5;
	58 -> 5;
	99 -> 5;
	16 -> 5;
	42 -> 5;
	26 -> 5;
	100 -> 5;
	91 -> 5;
	108 -> 5;
	86 -> 5;
	9 -> 5;
	53 -> 5;
	46 -> 5;
	103 -> 5;
	84 -> 5;
	35 -> 5;
	10 -> 5;
	44 -> 5;
	1 -> 5;
	57 -> 5;
	88 -> 5;
	40 -> 5;
	54 -> 5;
	8 -> 5;
	63 -> 5;
	28 -> 5;
	94 -> 5;
	81 -> 5;
	19 -> 5;
	102 -> 5;
	12 -> 5;
	34 -> 5;
	25 -> 5;
	23 -> 5;
	39 -> 5;
	79 -> 5;
	60 -> 5;
	104 -> 5;
	62 -> 5;
	71 -> 5;
	30 -> 5;
	55 -> 5;
	111 -> 5;
	74 -> 5;
	32 -> 5;
	14 -> 5;
	50 -> 5;
	90 -> 5;
	36 -> 5;
	64 -> 5;
	78 -> 5;
	11 -> 5;
	107 -> 5;
	2 -> 5;

	/*
	 * <<assertion>>
	 */
	edge [ label = "&laquo;assertion&raquo;",
		color = "/dark28/7", fontcolor = "/dark28/7" ];
	54 -> 55;
	76 -> 77;
	65 -> 46;
	85 -> 84;
	91 -> 92;
	24 -> 25;
	48 -> 40;
	19 -> 40;
	14 -> 64;
	29 -> 30;
	55 -> 42;
	6 -> 103;
	86 -> 41;
	83 -> 84;
	66 -> 44;
	68 -> 71;
	98 -> 99;
	71 -> 41;
	39 -> 38;
	22 -> 23;
	51 -> 52;
	59 -> 60;
	16 -> 11;
	34 -> 35;
	80 -> 81;
	90 -> 40;
	26 -> 27;
	9 -> 12;
	89 -> 90;
	96 -> 100;
	102 -> 108;
	108 -> 12;
	82 -> 83;
	17 -> 44;
	95 -> 13;
	33 -> 34;
	67 -> 68;
	87 -> 91;
	103 -> 12;
	107 -> 40;
	81 -> 86;
	64 -> 44;
	105 -> 12;
	72 -> 46;
	21 -> 28;
	20 -> 37;
	10 -> 11;
	31 -> 32;
	53 -> 54;
	77 -> 78;
	73 -> 74;
	79 -> 88;
	104 -> 13;
	45 -> 53;
	40 -> 41;
	49 -> 50;
	7 -> 16;
	4 -> 8;
	3 -> 109;
	36 -> 35;
	69 -> 70;
	100 -> 101;
	62 -> 97;
	43 -> 56;
	99 -> 71;
	63 -> 93;
	61 -> 11;
	2 -> 110;
	97 -> 44;
	15 -> 61;
	37 -> 38;
	41 -> 42;
	106 -> 107;
	18 -> 19;
	56 -> 40;
	47 -> 48;
	57 -> 58;
	74 -> 75;
	93 -> 94;
	92 -> 41;

	/*
	 * Footer:
	 */
	label = "/pool/users/jra40/P4/tesla/sys/ufs/ffs/ffs_vnops.c:449#0\lTESLA_SYSCALL(\l	    incallstack(ufs_readdir) ||\l	    previously(called(vn_rdwr(ANY(int), vp, ANY(ptr), ANY(int),\l	    ANY(int), ANY(int), flags(IO_NOMACCHECK), ANY(ptr), ANY(ptr),\l	    ANY(ptr), ANY(ptr)))) ||\l	    previously(mac_vnode_check_read(ANY(ptr), ANY(ptr), vp) == 0));";
}

/*
 * /pool/users/jra40/P4/tesla/sys/ufs/ffs/ffs_vnops.c:682#1
 */
digraph automaton_1 {
	graph [ truecolor=true, bgcolor="transparent", dpi=60, size="8,10", fontname = "Monospace", labeljust = "l", labelloc = bottom ];
	node [ shape = circle, fontname = "Monospace", style = filled, fillcolor = "white"];
	edge [ fontname = "Monospace" ];

	0 [ label = "state 0\n\"NFA:0\"\n(&#8902;)" ];
	1 [ label = "state 1\n\"NFA:1,2,3\"\n(&#8902;)" ];
	2 [ label = "state 2\n\"NFA:1,2,3,5\"\n(vp)" ];
	3 [ label = "state 3\n\"NFA:1,2,3,8\"\n(vp)" ];
	4 [ label = "state 4\n\"NFA:20\"\n(&#8902;)", shape = doublecircle ];
	5 [ label = "state 5\n\"NFA:1,2,3,5,11\"\n(vp)" ];
	6 [ label = "state 6\n\"NFA:7,9,10\"\n(vp)" ];
	7 [ label = "state 7\n\"NFA:10,12,13\"\n(vp)" ];
	8 [ label = "state 8\n\"NFA:10,15,16\"\n(vp)" ];
	9 [ label = "state 9\n\"NFA:1,2,3,8,11\"\n(vp)" ];
	10 [ label = "state 10\n\"NFA:4,6,10,12,13,14\"\n(vp)" ];
	11 [ label = "state 11\n\"NFA:10,14,17\"\n(vp)" ];
	12 [ label = "state 12\n\"NFA:10,15,16,18,19\"\n(vp)" ];
	13 [ label = "state 13\n\"NFA:7,9,10,12,13,14\"\n(vp)" ];
	14 [ label = "state 14\n\"NFA:4,6,10\"\n(vp)" ];

	/*
	 * amd64_syscall(X,X): Entry (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Entry)\n&laquo;init&raquo;",
		color = "/dark28/1", fontcolor = "/dark28/1" ];
	0 -> 1;

	/*
	 * vn_rdwr(X,vp,X,X,X,X,4096,X,X,X,X): Entry (Callee)
	 */
	edge [ label = "vn_rdwr(&#8902;,vp,&#8902;,&#8902;,&#8902;,&#8902;,4096,&#8902;,&#8902;,&#8902;,&#8902;)\n(Entry)",
		color = "/dark28/2", fontcolor = "/dark28/2" ];
	2 -> 2;
	13 -> 7;
	1 -> 2;
	6 -> 7;
	3 -> 5;
	9 -> 5;
	5 -> 2;

	/*
	 * mac_vnode_check_write(X,X,vp) == 0 (Callee)
	 */
	edge [ label = "mac_vnode_check_write(&#8902;,&#8902;,vp) == 0",
		color = "/dark28/3", fontcolor = "/dark28/3" ];
	14 -> 11;
	3 -> 3;
	2 -> 9;
	5 -> 9;
	9 -> 3;
	1 -> 3;
	10 -> 11;

	/*
	 * amd64_syscall(X,X): Exit (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Exit)\n&laquo;cleanup&raquo;",
		color = "/dark28/4", fontcolor = "/dark28/4" ];
	13 -> 4;
	12 -> 4;
	10 -> 4;
	2 -> 4;
	1 -> 4;
	8 -> 4;
	9 -> 4;
	6 -> 4;
	14 -> 4;
	11 -> 4;
	7 -> 4;
	3 -> 4;
	5 -> 4;

	/*
	 * <<assertion>>
	 */
	edge [ label = "&laquo;assertion&raquo;",
		color = "/dark28/5", fontcolor = "/dark28/5" ];
	3 -> 6;
	13 -> 8;
	2 -> 14;
	11 -> 12;
	5 -> 10;
	7 -> 8;
	9 -> 13;
	10 -> 8;

	/*
	 * Footer:
	 */
	label = "/pool/users/jra40/P4/tesla/sys/ufs/ffs/ffs_vnops.c:682#1\lTESLA_SYSCALL(\l	    previously(called(vn_rdwr(ANY(int), vp, ANY(ptr), ANY(int),\l	    ANY(int), ANY(int), flags(IO_NOMACCHECK), ANY(ptr), ANY(ptr),\l	    ANY(ptr), ANY(ptr)))) ||\l	    previously(mac_vnode_check_write(ANY(ptr), ANY(ptr), vp) == 0));";
}

/*
 * /pool/users/jra40/P4/tesla/sys/ufs/ffs/ffs_vnops.c:1501#2
 */
digraph automaton_2 {
	graph [ truecolor=true, bgcolor="transparent", dpi=60, size="8,10", fontname = "Monospace", labeljust = "l", labelloc = bottom ];
	node [ shape = circle, fontname = "Monospace", style = filled, fillcolor = "white"];
	edge [ fontname = "Monospace" ];

	0 [ label = "state 0\n\"NFA:0\"\n(&#8902;,&#8902;,&#8902;)" ];
	1 [ label = "state 1\n\"NFA:1,2,3\"\n(&#8902;,&#8902;,&#8902;)" ];
	2 [ label = "state 2\n\"NFA:1,2,3,5\"\n(&#8902;,&#8902;,&#8902;)" ];
	3 [ label = "state 3\n\"NFA:1,2,3,9\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	4 [ label = "state 4\n\"NFA:24\"\n(&#8902;,&#8902;,&#8902;)", shape = doublecircle ];
	5 [ label = "state 5\n\"NFA:1,2,3,5,12\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	6 [ label = "state 6\n\"NFA:8,10,11\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	7 [ label = "state 7\n\"NFA:11,13,14\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	8 [ label = "state 8\n\"NFA:11,16,17\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	9 [ label = "state 9\n\"NFA:11,19,20\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	10 [ label = "state 10\n\"NFA:1,2,3,9,12\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	11 [ label = "state 11\n\"NFA:6,11,13,14,15\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	12 [ label = "state 12\n\"NFA:4,7,11,18\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	13 [ label = "state 13\n\"NFA:15\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	14 [ label = "state 14\n\"NFA:18\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	15 [ label = "state 15\n\"NFA:11,18,21\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	16 [ label = "state 16\n\"NFA:11,19,20,22,23\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	17 [ label = "state 17\n\"NFA:8,10,11,13,14,15\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	18 [ label = "state 18\n\"NFA:6\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	19 [ label = "state 19\n\"NFA:4,7,11\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];

	/*
	 * amd64_syscall(X,X): Entry (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Entry)\n&laquo;init&raquo;",
		color = "/dark28/1", fontcolor = "/dark28/1" ];
	0 -> 1;

	/*
	 * ufs_setacl(X): Entry (Callee)
	 */
	edge [ label = "ufs_setacl(&#8902;)\n(Entry)",
		color = "/dark28/2", fontcolor = "/dark28/2" ];
	6 -> 7;
	10 -> 5;
	2 -> 2;
	17 -> 7;
	5 -> 2;
	3 -> 5;
	1 -> 2;

	/*
	 * ufs_setacl(X) == X (Callee)
	 */
	edge [ label = "ufs_setacl(&#8902;) == &#8902;",
		color = "/dark28/3", fontcolor = "/dark28/3" ];
	11 -> 12;
	5 -> 1;
	1 -> 1;
	3 -> 1;
	17 -> 14;
	10 -> 1;
	13 -> 14;
	8 -> 9;
	2 -> 1;
	18 -> 19;

	/*
	 * mac_vnode_check_deleteextattr(X,ap.a_vp,ap.a_attrnamespace,ap.a_name) == 0 (Callee)
	 */
	edge [ label = "mac_vnode_check_deleteextattr(&#8902;,ap.a_vp,ap.a_attrnamespace,ap.a_name) == 0",
		color = "/dark28/4", fontcolor = "/dark28/4" ];
	10 -> 3;
	19 -> 15;
	5 -> 10;
	2 -> 10;
	12 -> 15;
	11 -> 13;
	3 -> 3;
	18 -> 13;
	1 -> 3;

	/*
	 * amd64_syscall(X,X): Exit (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Exit)\n&laquo;cleanup&raquo;",
		color = "/dark28/5", fontcolor = "/dark28/5" ];
	15 -> 4;
	10 -> 4;
	8 -> 4;
	3 -> 4;
	17 -> 4;
	5 -> 4;
	19 -> 4;
	12 -> 4;
	16 -> 4;
	1 -> 4;
	9 -> 4;
	6 -> 4;
	7 -> 4;
	11 -> 4;
	2 -> 4;

	/*
	 * <<assertion>>
	 */
	edge [ label = "&laquo;assertion&raquo;",
		color = "/dark28/6", fontcolor = "/dark28/6" ];
	3 -> 6;
	2 -> 18;
	10 -> 17;
	5 -> 11;
	15 -> 16;
	17 -> 8;
	12 -> 9;
	13 -> 8;
	14 -> 9;
	11 -> 8;
	7 -> 8;

	/*
	 * Footer:
	 */
	label = "/pool/users/jra40/P4/tesla/sys/ufs/ffs/ffs_vnops.c:1501#2\lTESLA_SYSCALL(incallstack(ufs_setacl) ||\l	    previously(mac_vnode_check_deleteextattr(ANY(ptr), ap->a_vp,\l	    ap->a_attrnamespace, ap->a_name) == 0));";
}

/*
 * /pool/users/jra40/P4/tesla/sys/ufs/ffs/ffs_vnops.c:1596#3
 */
digraph automaton_3 {
	graph [ truecolor=true, bgcolor="transparent", dpi=60, size="8,10", fontname = "Monospace", labeljust = "l", labelloc = bottom ];
	node [ shape = circle, fontname = "Monospace", style = filled, fillcolor = "white"];
	edge [ fontname = "Monospace" ];

	0 [ label = "state 0\n\"NFA:0\"\n(&#8902;,&#8902;,&#8902;)" ];
	1 [ label = "state 1\n\"NFA:1,2,3\"\n(&#8902;,&#8902;,&#8902;)" ];
	2 [ label = "state 2\n\"NFA:1,2,3,5\"\n(&#8902;,&#8902;,&#8902;)" ];
	3 [ label = "state 3\n\"NFA:1,2,3,9\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	4 [ label = "state 4\n\"NFA:24\"\n(&#8902;,&#8902;,&#8902;)", shape = doublecircle ];
	5 [ label = "state 5\n\"NFA:1,2,3,5,12\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	6 [ label = "state 6\n\"NFA:8,10,11\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	7 [ label = "state 7\n\"NFA:11,13,14\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	8 [ label = "state 8\n\"NFA:11,16,17\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	9 [ label = "state 9\n\"NFA:11,19,20\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	10 [ label = "state 10\n\"NFA:1,2,3,9,12\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	11 [ label = "state 11\n\"NFA:6,11,13,14,15\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	12 [ label = "state 12\n\"NFA:4,7,11,18\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	13 [ label = "state 13\n\"NFA:15\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	14 [ label = "state 14\n\"NFA:18\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	15 [ label = "state 15\n\"NFA:11,18,21\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	16 [ label = "state 16\n\"NFA:11,19,20,22,23\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	17 [ label = "state 17\n\"NFA:8,10,11,13,14,15\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	18 [ label = "state 18\n\"NFA:6\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	19 [ label = "state 19\n\"NFA:4,7,11\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];

	/*
	 * amd64_syscall(X,X): Entry (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Entry)\n&laquo;init&raquo;",
		color = "/dark28/1", fontcolor = "/dark28/1" ];
	0 -> 1;

	/*
	 * ufs_getacl(X): Entry (Callee)
	 */
	edge [ label = "ufs_getacl(&#8902;)\n(Entry)",
		color = "/dark28/2", fontcolor = "/dark28/2" ];
	6 -> 7;
	10 -> 5;
	2 -> 2;
	17 -> 7;
	3 -> 5;
	5 -> 2;
	1 -> 2;

	/*
	 * ufs_getacl(X) == X (Callee)
	 */
	edge [ label = "ufs_getacl(&#8902;) == &#8902;",
		color = "/dark28/3", fontcolor = "/dark28/3" ];
	18 -> 19;
	11 -> 12;
	3 -> 1;
	13 -> 14;
	2 -> 1;
	5 -> 1;
	10 -> 1;
	8 -> 9;
	1 -> 1;
	17 -> 14;

	/*
	 * mac_vnode_check_getextattr(X,ap.a_vp,ap.a_attrnamespace,ap.a_name) == 0 (Callee)
	 */
	edge [ label = "mac_vnode_check_getextattr(&#8902;,ap.a_vp,ap.a_attrnamespace,ap.a_name) == 0",
		color = "/dark28/4", fontcolor = "/dark28/4" ];
	3 -> 3;
	19 -> 15;
	18 -> 13;
	11 -> 13;
	12 -> 15;
	10 -> 3;
	1 -> 3;
	2 -> 10;
	5 -> 10;

	/*
	 * amd64_syscall(X,X): Exit (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Exit)\n&laquo;cleanup&raquo;",
		color = "/dark28/5", fontcolor = "/dark28/5" ];
	1 -> 4;
	17 -> 4;
	6 -> 4;
	2 -> 4;
	8 -> 4;
	9 -> 4;
	10 -> 4;
	11 -> 4;
	19 -> 4;
	12 -> 4;
	7 -> 4;
	15 -> 4;
	16 -> 4;
	3 -> 4;
	5 -> 4;

	/*
	 * <<assertion>>
	 */
	edge [ label = "&laquo;assertion&raquo;",
		color = "/dark28/6", fontcolor = "/dark28/6" ];
	13 -> 8;
	3 -> 6;
	10 -> 17;
	11 -> 8;
	17 -> 8;
	2 -> 18;
	5 -> 11;
	15 -> 16;
	12 -> 9;
	7 -> 8;
	14 -> 9;

	/*
	 * Footer:
	 */
	label = "/pool/users/jra40/P4/tesla/sys/ufs/ffs/ffs_vnops.c:1596#3\lTESLA_SYSCALL(incallstack(ufs_getacl) ||\l	    previously(mac_vnode_check_getextattr(ANY(ptr), ap->a_vp,\l	    ap->a_attrnamespace, ap->a_name) == 0));";
}

/*
 * /pool/users/jra40/P4/tesla/sys/ufs/ffs/ffs_vnops.c:1659#4
 */
digraph automaton_4 {
	graph [ truecolor=true, bgcolor="transparent", dpi=60, size="8,10", fontname = "Monospace", labeljust = "l", labelloc = bottom ];
	node [ shape = circle, fontname = "Monospace", style = filled, fillcolor = "white"];
	edge [ fontname = "Monospace" ];

	0 [ label = "state 0\n\"NFA:0\"\n(&#8902;,&#8902;)" ];
	1 [ label = "state 1\n\"NFA:1\"\n(&#8902;,&#8902;)" ];
	2 [ label = "state 2\n\"NFA:1,3\"\n(ap.a_vp,ap.a_attrnamespace)" ];
	3 [ label = "state 3\n\"NFA:5\"\n(&#8902;,&#8902;)", shape = doublecircle ];
	4 [ label = "state 4\n\"NFA:2,4\"\n(ap.a_vp,ap.a_attrnamespace)" ];

	/*
	 * amd64_syscall(X,X): Entry (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Entry)\n&laquo;init&raquo;",
		color = "/dark28/1", fontcolor = "/dark28/1" ];
	0 -> 1;

	/*
	 * mac_vnode_check_listextattr(X,ap.a_vp,ap.a_attrnamespace) == 0 (Callee)
	 */
	edge [ label = "mac_vnode_check_listextattr(&#8902;,ap.a_vp,ap.a_attrnamespace) == 0",
		color = "/dark28/2", fontcolor = "/dark28/2" ];
	1 -> 2;
	2 -> 2;

	/*
	 * amd64_syscall(X,X): Exit (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Exit)\n&laquo;cleanup&raquo;",
		color = "/dark28/3", fontcolor = "/dark28/3" ];
	1 -> 3;
	2 -> 3;
	4 -> 3;

	/*
	 * <<assertion>>
	 */
	edge [ label = "&laquo;assertion&raquo;",
		color = "/dark28/4", fontcolor = "/dark28/4" ];
	2 -> 4;

	/*
	 * Footer:
	 */
	label = "/pool/users/jra40/P4/tesla/sys/ufs/ffs/ffs_vnops.c:1659#4\lTESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_listextattr(ANY(ptr),\l	    ap->a_vp, ap->a_attrnamespace) == 0);";
}

/*
 * /pool/users/jra40/P4/tesla/sys/ufs/ffs/ffs_vnops.c:1731#5
 */
digraph automaton_5 {
	graph [ truecolor=true, bgcolor="transparent", dpi=60, size="8,10", fontname = "Monospace", labeljust = "l", labelloc = bottom ];
	node [ shape = circle, fontname = "Monospace", style = filled, fillcolor = "white"];
	edge [ fontname = "Monospace" ];

	0 [ label = "state 0\n\"NFA:0\"\n(&#8902;,&#8902;,&#8902;)" ];
	1 [ label = "state 1\n\"NFA:1,2,3\"\n(&#8902;,&#8902;,&#8902;)" ];
	2 [ label = "state 2\n\"NFA:1,2,3,5\"\n(&#8902;,&#8902;,&#8902;)" ];
	3 [ label = "state 3\n\"NFA:1,2,3,9\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	4 [ label = "state 4\n\"NFA:24\"\n(&#8902;,&#8902;,&#8902;)", shape = doublecircle ];
	5 [ label = "state 5\n\"NFA:1,2,3,5,12\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	6 [ label = "state 6\n\"NFA:8,10,11\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	7 [ label = "state 7\n\"NFA:11,13,14\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	8 [ label = "state 8\n\"NFA:11,16,17\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	9 [ label = "state 9\n\"NFA:11,19,20\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	10 [ label = "state 10\n\"NFA:1,2,3,9,12\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	11 [ label = "state 11\n\"NFA:6,11,13,14,15\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	12 [ label = "state 12\n\"NFA:4,7,11,18\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	13 [ label = "state 13\n\"NFA:15\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	14 [ label = "state 14\n\"NFA:18\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	15 [ label = "state 15\n\"NFA:11,18,21\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	16 [ label = "state 16\n\"NFA:11,19,20,22,23\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	17 [ label = "state 17\n\"NFA:8,10,11,13,14,15\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	18 [ label = "state 18\n\"NFA:6\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];
	19 [ label = "state 19\n\"NFA:4,7,11\"\n(ap.a_vp,ap.a_attrnamespace,ap.a_name)" ];

	/*
	 * amd64_syscall(X,X): Entry (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Entry)\n&laquo;init&raquo;",
		color = "/dark28/1", fontcolor = "/dark28/1" ];
	0 -> 1;

	/*
	 * ufs_setacl(X): Entry (Callee)
	 */
	edge [ label = "ufs_setacl(&#8902;)\n(Entry)",
		color = "/dark28/2", fontcolor = "/dark28/2" ];
	3 -> 5;
	10 -> 5;
	6 -> 7;
	5 -> 2;
	2 -> 2;
	1 -> 2;
	17 -> 7;

	/*
	 * ufs_setacl(X) == X (Callee)
	 */
	edge [ label = "ufs_setacl(&#8902;) == &#8902;",
		color = "/dark28/3", fontcolor = "/dark28/3" ];
	2 -> 1;
	3 -> 1;
	11 -> 12;
	1 -> 1;
	8 -> 9;
	10 -> 1;
	13 -> 14;
	17 -> 14;
	5 -> 1;
	18 -> 19;

	/*
	 * mac_vnode_check_setextattr(X,ap.a_vp,ap.a_attrnamespace,ap.a_name) == 0 (Callee)
	 */
	edge [ label = "mac_vnode_check_setextattr(&#8902;,ap.a_vp,ap.a_attrnamespace,ap.a_name) == 0",
		color = "/dark28/4", fontcolor = "/dark28/4" ];
	3 -> 3;
	1 -> 3;
	10 -> 3;
	19 -> 15;
	12 -> 15;
	2 -> 10;
	5 -> 10;
	11 -> 13;
	18 -> 13;

	/*
	 * amd64_syscall(X,X): Exit (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Exit)\n&laquo;cleanup&raquo;",
		color = "/dark28/5", fontcolor = "/dark28/5" ];
	8 -> 4;
	19 -> 4;
	7 -> 4;
	3 -> 4;
	2 -> 4;
	16 -> 4;
	15 -> 4;
	6 -> 4;
	10 -> 4;
	1 -> 4;
	5 -> 4;
	11 -> 4;
	17 -> 4;
	9 -> 4;
	12 -> 4;

	/*
	 * <<assertion>>
	 */
	edge [ label = "&laquo;assertion&raquo;",
		color = "/dark28/6", fontcolor = "/dark28/6" ];
	2 -> 18;
	11 -> 8;
	3 -> 6;
	15 -> 16;
	5 -> 11;
	12 -> 9;
	7 -> 8;
	13 -> 8;
	10 -> 17;
	14 -> 9;
	17 -> 8;

	/*
	 * Footer:
	 */
	label = "/pool/users/jra40/P4/tesla/sys/ufs/ffs/ffs_vnops.c:1731#5\lTESLA_SYSCALL(incallstack(ufs_setacl) ||\l	    previously(mac_vnode_check_setextattr(ANY(ptr), ap->a_vp,\l	    ap->a_attrnamespace, ap->a_name) == 0));";
}

/*
 * /pool/users/jra40/P4/tesla/sys/ufs/ufs/ufs_acl.c:369#0
 */
digraph automaton_6 {
	graph [ truecolor=true, bgcolor="transparent", dpi=60, size="8,10", fontname = "Monospace", labeljust = "l", labelloc = bottom ];
	node [ shape = circle, fontname = "Monospace", style = filled, fillcolor = "white"];
	edge [ fontname = "Monospace" ];

	0 [ label = "state 0\n\"NFA:0\"\n(&#8902;,&#8902;)" ];
	1 [ label = "state 1\n\"NFA:1\"\n(&#8902;,&#8902;)" ];
	2 [ label = "state 2\n\"NFA:1,3\"\n(ap.a_vp,ap.a_type)" ];
	3 [ label = "state 3\n\"NFA:5\"\n(&#8902;,&#8902;)", shape = doublecircle ];
	4 [ label = "state 4\n\"NFA:2,4\"\n(ap.a_vp,ap.a_type)" ];

	/*
	 * amd64_syscall(X,X): Entry (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Entry)\n&laquo;init&raquo;",
		color = "/dark28/1", fontcolor = "/dark28/1" ];
	0 -> 1;

	/*
	 * mac_vnode_check_getacl(X,ap.a_vp,ap.a_type) == 0 (Callee)
	 */
	edge [ label = "mac_vnode_check_getacl(&#8902;,ap.a_vp,ap.a_type) == 0",
		color = "/dark28/2", fontcolor = "/dark28/2" ];
	1 -> 2;
	2 -> 2;

	/*
	 * amd64_syscall(X,X): Exit (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Exit)\n&laquo;cleanup&raquo;",
		color = "/dark28/3", fontcolor = "/dark28/3" ];
	1 -> 3;
	2 -> 3;
	4 -> 3;

	/*
	 * <<assertion>>
	 */
	edge [ label = "&laquo;assertion&raquo;",
		color = "/dark28/4", fontcolor = "/dark28/4" ];
	2 -> 4;

	/*
	 * Footer:
	 */
	label = "/pool/users/jra40/P4/tesla/sys/ufs/ufs/ufs_acl.c:369#0\lTESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_getacl(ANY(ptr), ap->a_vp,\l	    ap->a_type) == 0);";
}

/*
 * /pool/users/jra40/P4/tesla/sys/ufs/ufs/ufs_acl.c:628#1
 */
digraph automaton_7 {
	graph [ truecolor=true, bgcolor="transparent", dpi=60, size="8,10", fontname = "Monospace", labeljust = "l", labelloc = bottom ];
	node [ shape = circle, fontname = "Monospace", style = filled, fillcolor = "white"];
	edge [ fontname = "Monospace" ];

	0 [ label = "state 0\n\"NFA:0\"\n(&#8902;,&#8902;)" ];
	1 [ label = "state 1\n\"NFA:1\"\n(&#8902;,&#8902;)" ];
	2 [ label = "state 2\n\"NFA:1,3\"\n(ap.a_vp,ap.a_type)" ];
	3 [ label = "state 3\n\"NFA:5\"\n(&#8902;,&#8902;)", shape = doublecircle ];
	4 [ label = "state 4\n\"NFA:2,4\"\n(ap.a_vp,ap.a_type)" ];

	/*
	 * amd64_syscall(X,X): Entry (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Entry)\n&laquo;init&raquo;",
		color = "/dark28/1", fontcolor = "/dark28/1" ];
	0 -> 1;

	/*
	 * mac_vnode_check_deleteacl(X,ap.a_vp,ap.a_type) == 0 (Callee)
	 */
	edge [ label = "mac_vnode_check_deleteacl(&#8902;,ap.a_vp,ap.a_type) == 0",
		color = "/dark28/2", fontcolor = "/dark28/2" ];
	1 -> 2;
	2 -> 2;

	/*
	 * amd64_syscall(X,X): Exit (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Exit)\n&laquo;cleanup&raquo;",
		color = "/dark28/3", fontcolor = "/dark28/3" ];
	1 -> 3;
	2 -> 3;
	4 -> 3;

	/*
	 * <<assertion>>
	 */
	edge [ label = "&laquo;assertion&raquo;",
		color = "/dark28/4", fontcolor = "/dark28/4" ];
	2 -> 4;

	/*
	 * Footer:
	 */
	label = "/pool/users/jra40/P4/tesla/sys/ufs/ufs/ufs_acl.c:628#1\lTESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_deleteacl(ANY(ptr),\l		    ap->a_vp, ap->a_type) == 0);";
}

/*
 * /pool/users/jra40/P4/tesla/sys/ufs/ufs/ufs_acl.c:631#2
 */
digraph automaton_8 {
	graph [ truecolor=true, bgcolor="transparent", dpi=60, size="8,10", fontname = "Monospace", labeljust = "l", labelloc = bottom ];
	node [ shape = circle, fontname = "Monospace", style = filled, fillcolor = "white"];
	edge [ fontname = "Monospace" ];

	0 [ label = "state 0\n\"NFA:0\"\n(&#8902;,&#8902;,&#8902;)" ];
	1 [ label = "state 1\n\"NFA:1\"\n(&#8902;,&#8902;,&#8902;)" ];
	2 [ label = "state 2\n\"NFA:1,3\"\n(ap.a_vp,ap.a_type,ap.a_aclp)" ];
	3 [ label = "state 3\n\"NFA:5\"\n(&#8902;,&#8902;,&#8902;)", shape = doublecircle ];
	4 [ label = "state 4\n\"NFA:2,4\"\n(ap.a_vp,ap.a_type,ap.a_aclp)" ];

	/*
	 * amd64_syscall(X,X): Entry (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Entry)\n&laquo;init&raquo;",
		color = "/dark28/1", fontcolor = "/dark28/1" ];
	0 -> 1;

	/*
	 * mac_vnode_check_setacl(X,ap.a_vp,ap.a_type,ap.a_aclp) == 0 (Callee)
	 */
	edge [ label = "mac_vnode_check_setacl(&#8902;,ap.a_vp,ap.a_type,ap.a_aclp) == 0",
		color = "/dark28/2", fontcolor = "/dark28/2" ];
	1 -> 2;
	2 -> 2;

	/*
	 * amd64_syscall(X,X): Exit (Callee)
	 */
	edge [ label = "amd64_syscall(&#8902;,&#8902;)\n(Exit)\n&laquo;cleanup&raquo;",
		color = "/dark28/3", fontcolor = "/dark28/3" ];
	1 -> 3;
	2 -> 3;
	4 -> 3;

	/*
	 * <<assertion>>
	 */
	edge [ label = "&laquo;assertion&raquo;",
		color = "/dark28/4", fontcolor = "/dark28/4" ];
	2 -> 4;

	/*
	 * Footer:
	 */
	label = "/pool/users/jra40/P4/tesla/sys/ufs/ufs/ufs_acl.c:631#2\lTESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_setacl(ANY(ptr),\l		    ap->a_vp, ap->a_type, ap->a_aclp) == 0);";
}

