automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/contrib/tesla/test/tesla_test.c"
      line: 63
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/contrib/tesla/test/tesla_test.c"
            line: 63
            counter: 0
          }
        }
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "debug_tesla_func"
          }
          direction: Entry
          context: Callee
          strict: false
        }
      }
    }
  }
  source: "TESLA_SYSCALL(eventually(called(debug_tesla_func())));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/contrib/tesla/test/tesla_test.c"
      line: 81
      counter: 1
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/contrib/tesla/test/tesla_test.c"
            line: 81
            counter: 1
          }
        }
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "debug_tesla_func"
          }
          direction: Entry
          context: Callee
          strict: false
        }
      }
    }
  }
  source: "TESLA_SYSCALL(eventually(called(debug_tesla_func())));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/contrib/tesla/test/tesla_test.c"
      line: 103
      counter: 2
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "debug_tesla_func"
          }
          direction: Entry
          context: Callee
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/contrib/tesla/test/tesla_test.c"
            line: 103
            counter: 2
          }
        }
      }
    }
  }
  source: "TESLA_SYSCALL(previously(called(debug_tesla_func())));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/contrib/tesla/test/tesla_test.c"
      line: 120
      counter: 3
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "debug_tesla_func"
          }
          direction: Entry
          context: Callee
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/contrib/tesla/test/tesla_test.c"
            line: 120
            counter: 3
          }
        }
      }
    }
  }
  source: "TESLA_SYSCALL(previously(called(debug_tesla_func())));"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/contrib/tesla/test/tesla_test.c"
      line: 63
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/contrib/tesla/test/tesla_test.c"
      line: 81
      counter: 1
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/contrib/tesla/test/tesla_test.c"
      line: 103
      counter: 2
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/contrib/tesla/test/tesla_test.c"
      line: 120
      counter: 3
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs.c"
      line: 77
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_cansee"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "p"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs.c"
            line: 77
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "p"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_cansee(ANY(ptr), p) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs.c"
      line: 77
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_ctl.c"
      line: 316
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "p"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_ctl.c"
            line: 316
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "p"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), p) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_ctl.c"
      line: 316
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_ioctl.c"
      line: 74
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "p"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_ioctl.c"
            line: 74
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "p"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), p) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_ioctl.c"
      line: 74
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_note.c"
      line: 54
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "p"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_note.c"
            line: 54
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "p"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), p) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_note.c"
      line: 54
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_osrel.c"
      line: 48
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "p"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_osrel.c"
            line: 48
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "p"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), p) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_osrel.c"
      line: 48
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_rlimit.c"
      line: 70
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "p"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_rlimit.c"
            line: 70
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "p"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), p) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_rlimit.c"
      line: 70
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_status.c"
      line: 77
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_cansee"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "p"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_status.c"
            line: 77
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "p"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_cansee(ANY(ptr), p) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_status.c"
      line: 77
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_type.c"
      line: 51
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_cansee"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "p"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_type.c"
            line: 51
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "p"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_cansee(ANY(ptr), p) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/fs/procfs/procfs_type.c"
      line: 51
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/ksched.c"
      line: 140
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_cansched"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/ksched.c"
            line: 140
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_cansched(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/ksched.c"
      line: 158
      counter: 1
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_cansee"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/ksched.c"
            line: 158
            counter: 1
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_cansee(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/ksched.c"
      line: 190
      counter: 2
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_cansched"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/ksched.c"
            line: 190
            counter: 2
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_cansched(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/ksched.c"
      line: 235
      counter: 3
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_cansee"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/ksched.c"
            line: 235
            counter: 3
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_cansee(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/ksched.c"
      line: 300
      counter: 4
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_cansee"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/ksched.c"
            line: 300
            counter: 4
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_cansee(ANY(ptr), td->td_proc) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/ksched.c"
      line: 140
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/ksched.c"
      line: 158
      counter: 1
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/ksched.c"
      line: 190
      counter: 2
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/ksched.c"
      line: 235
      counter: 3
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/ksched.c"
      line: 300
      counter: 4
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_cpuset.c"
      line: 542
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_cansched"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "p"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_cpuset.c"
            line: 542
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "p"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_cansched(ANY(ptr), p) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_cpuset.c"
      line: 720
      counter: 1
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_cansched"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "p"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_cpuset.c"
            line: 720
            counter: 1
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "p"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_cansched(ANY(ptr), p) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_cpuset.c"
      line: 542
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_cpuset.c"
      line: 720
      counter: 1
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_mib.c"
      line: 300
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "priv_check"
          }
          direction: Exit
          context: Callee
          argument {
            type: Field
            index: 0
            field {
              type: "sysctl_req"
              base {
                type: Variable
                name: "req"
              }
              name: "td"
              index: 0
            }
          }
          argument {
            type: Constant
            value: 242
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_mib.c"
            line: 300
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "sysctl_req"
      base {
        type: Variable
        name: "req"
      }
      name: "td"
      index: 0
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(priv_check(req->td,\n\t\t    PRIV_SYSCTL_WRITEJAIL) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_mib.c"
      line: 361
      counter: 1
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "priv_check"
          }
          direction: Exit
          context: Callee
          argument {
            type: Field
            index: 0
            field {
              type: "sysctl_req"
              base {
                type: Variable
                name: "req"
              }
              name: "td"
              index: 0
            }
          }
          argument {
            type: Constant
            value: 242
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_mib.c"
            line: 361
            counter: 1
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "sysctl_req"
      base {
        type: Variable
        name: "req"
      }
      name: "td"
      index: 0
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(priv_check(req->td, PRIV_SYSCTL_WRITEJAIL) ==\n\t    0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_mib.c"
      line: 300
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_mib.c"
      line: 361
      counter: 1
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2156
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: BOOLEAN_EXPR
        booleanExpr {
          operation: BE_Or
          expression {
            type: SEQUENCE
            sequence {
              expression {
                type: NULL_EXPR
              }
              expression {
                type: FUNCTION
                function {
                  function {
                    name: "mac_cred_check_setuid"
                  }
                  direction: Exit
                  context: Callee
                  argument {
                    type: Any
                  }
                  argument {
                    type: Variable
                    index: 0
                    name: "euid"
                  }
                  expectedReturnValue {
                    type: Constant
                    value: 0
                  }
                  strict: false
                }
              }
              expression {
                type: ASSERTION_SITE
                assertSite {
                  location {
                    filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                    line: 2156
                    counter: 0
                  }
                }
              }
            }
          }
          expression {
            type: SEQUENCE
            sequence {
              expression {
                type: NULL_EXPR
              }
              expression {
                type: FUNCTION
                function {
                  function {
                    name: "mac_cred_check_setreuid"
                  }
                  direction: Exit
                  context: Callee
                  argument {
                    type: Any
                  }
                  argument {
                    type: Any
                  }
                  argument {
                    type: Variable
                    index: 0
                    name: "euid"
                  }
                  expectedReturnValue {
                    type: Constant
                    value: 0
                  }
                  strict: false
                }
              }
              expression {
                type: ASSERTION_SITE
                assertSite {
                  location {
                    filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                    line: 2156
                    counter: 0
                  }
                }
              }
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "mac_cred_check_setresuid"
              }
              direction: Exit
              context: Callee
              argument {
                type: Any
              }
              argument {
                type: Any
              }
              argument {
                type: Variable
                index: 0
                name: "euid"
              }
              argument {
                type: Any
              }
              expectedReturnValue {
                type: Constant
                value: 0
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2156
                counter: 0
              }
            }
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "euid"
  }
  source: "TESLA_SYSCALL(\n\t    previously(mac_cred_check_setuid(ANY(ptr), euid) == 0) ||\n\t    previously(mac_cred_check_setreuid(ANY(ptr), ANY(int), euid)\n\t    == 0) ||\n\t    previously(mac_cred_check_setresuid(ANY(ptr), ANY(int), euid,\n\t    ANY(int)) == 0));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2158
      counter: 1
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "setsugid"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: "p"
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2158
                counter: 1
              }
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2158
                counter: 1
              }
            }
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "setsugid"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: "p"
              }
              strict: false
            }
          }
        }
      }
    }
  }
  source: "TESLA_SYSCALL(previously(called(setsugid)) ||\n\t    eventually(called(setsugid)));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2181
      counter: 2
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: BOOLEAN_EXPR
        booleanExpr {
          operation: BE_Or
          expression {
            type: SEQUENCE
            sequence {
              expression {
                type: NULL_EXPR
              }
              expression {
                type: FUNCTION
                function {
                  function {
                    name: "mac_cred_check_setgid"
                  }
                  direction: Exit
                  context: Callee
                  argument {
                    type: Any
                  }
                  argument {
                    type: Variable
                    index: 0
                    name: "egid"
                  }
                  expectedReturnValue {
                    type: Constant
                    value: 0
                  }
                  strict: false
                }
              }
              expression {
                type: ASSERTION_SITE
                assertSite {
                  location {
                    filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                    line: 2181
                    counter: 2
                  }
                }
              }
            }
          }
          expression {
            type: SEQUENCE
            sequence {
              expression {
                type: NULL_EXPR
              }
              expression {
                type: FUNCTION
                function {
                  function {
                    name: "mac_cred_check_setregid"
                  }
                  direction: Exit
                  context: Callee
                  argument {
                    type: Any
                  }
                  argument {
                    type: Any
                  }
                  argument {
                    type: Variable
                    index: 0
                    name: "egid"
                  }
                  expectedReturnValue {
                    type: Constant
                    value: 0
                  }
                  strict: false
                }
              }
              expression {
                type: ASSERTION_SITE
                assertSite {
                  location {
                    filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                    line: 2181
                    counter: 2
                  }
                }
              }
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "mac_cred_check_setresgid"
              }
              direction: Exit
              context: Callee
              argument {
                type: Any
              }
              argument {
                type: Any
              }
              argument {
                type: Variable
                index: 0
                name: "egid"
              }
              argument {
                type: Any
              }
              expectedReturnValue {
                type: Constant
                value: 0
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2181
                counter: 2
              }
            }
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "egid"
  }
  source: "TESLA_SYSCALL(\n\t    previously(mac_cred_check_setgid(ANY(ptr), egid) == 0) ||\n\t    previously(mac_cred_check_setregid(ANY(ptr), ANY(int), egid)\n\t    == 0) ||\n\t    previously(mac_cred_check_setresgid(ANY(ptr), ANY(int), egid,\n\t    ANY(int)) == 0));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2183
      counter: 3
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "setsugid"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: "p"
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2183
                counter: 3
              }
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2183
                counter: 3
              }
            }
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "setsugid"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: "p"
              }
              strict: false
            }
          }
        }
      }
    }
  }
  source: "TESLA_SYSCALL(previously(called(setsugid)) ||\n\t    eventually(called(setsugid)));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2206
      counter: 4
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: BOOLEAN_EXPR
        booleanExpr {
          operation: BE_Or
          expression {
            type: SEQUENCE
            sequence {
              expression {
                type: NULL_EXPR
              }
              expression {
                type: FUNCTION
                function {
                  function {
                    name: "mac_cred_check_setuid"
                  }
                  direction: Exit
                  context: Callee
                  argument {
                    type: Any
                  }
                  argument {
                    type: Variable
                    index: 0
                    name: "ruid"
                  }
                  expectedReturnValue {
                    type: Constant
                    value: 0
                  }
                  strict: false
                }
              }
              expression {
                type: ASSERTION_SITE
                assertSite {
                  location {
                    filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                    line: 2206
                    counter: 4
                  }
                }
              }
            }
          }
          expression {
            type: SEQUENCE
            sequence {
              expression {
                type: NULL_EXPR
              }
              expression {
                type: FUNCTION
                function {
                  function {
                    name: "mac_cred_check_setreuid"
                  }
                  direction: Exit
                  context: Callee
                  argument {
                    type: Any
                  }
                  argument {
                    type: Variable
                    index: 0
                    name: "ruid"
                  }
                  argument {
                    type: Any
                  }
                  expectedReturnValue {
                    type: Constant
                    value: 0
                  }
                  strict: false
                }
              }
              expression {
                type: ASSERTION_SITE
                assertSite {
                  location {
                    filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                    line: 2206
                    counter: 4
                  }
                }
              }
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "mac_cred_check_setresuid"
              }
              direction: Exit
              context: Callee
              argument {
                type: Any
              }
              argument {
                type: Variable
                index: 0
                name: "ruid"
              }
              argument {
                type: Any
              }
              argument {
                type: Any
              }
              expectedReturnValue {
                type: Constant
                value: 0
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2206
                counter: 4
              }
            }
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "ruid"
  }
  source: "TESLA_SYSCALL(\n\t    previously(mac_cred_check_setuid(ANY(ptr), ruid) == 0) ||\n\t    previously(mac_cred_check_setreuid(ANY(ptr), ruid, ANY(int))\n\t    == 0) ||\n\t    previously(mac_cred_check_setresuid(ANY(ptr), ruid, ANY(int),\n\t    ANY(int)) == 0));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2208
      counter: 5
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "setsugid"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: "p"
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2208
                counter: 5
              }
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2208
                counter: 5
              }
            }
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "setsugid"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: "p"
              }
              strict: false
            }
          }
        }
      }
    }
  }
  source: "TESLA_SYSCALL(previously(called(setsugid)) ||\n\t    eventually(called(setsugid)));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2233
      counter: 6
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: BOOLEAN_EXPR
        booleanExpr {
          operation: BE_Or
          expression {
            type: SEQUENCE
            sequence {
              expression {
                type: NULL_EXPR
              }
              expression {
                type: FUNCTION
                function {
                  function {
                    name: "mac_cred_check_setgid"
                  }
                  direction: Exit
                  context: Callee
                  argument {
                    type: Any
                  }
                  argument {
                    type: Variable
                    index: 0
                    name: "rgid"
                  }
                  expectedReturnValue {
                    type: Constant
                    value: 0
                  }
                  strict: false
                }
              }
              expression {
                type: ASSERTION_SITE
                assertSite {
                  location {
                    filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                    line: 2233
                    counter: 6
                  }
                }
              }
            }
          }
          expression {
            type: SEQUENCE
            sequence {
              expression {
                type: NULL_EXPR
              }
              expression {
                type: FUNCTION
                function {
                  function {
                    name: "mac_cred_check_setregid"
                  }
                  direction: Exit
                  context: Callee
                  argument {
                    type: Any
                  }
                  argument {
                    type: Variable
                    index: 0
                    name: "rgid"
                  }
                  argument {
                    type: Any
                  }
                  expectedReturnValue {
                    type: Constant
                    value: 0
                  }
                  strict: false
                }
              }
              expression {
                type: ASSERTION_SITE
                assertSite {
                  location {
                    filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                    line: 2233
                    counter: 6
                  }
                }
              }
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "mac_cred_check_setresgid"
              }
              direction: Exit
              context: Callee
              argument {
                type: Any
              }
              argument {
                type: Variable
                index: 0
                name: "rgid"
              }
              argument {
                type: Any
              }
              argument {
                type: Any
              }
              expectedReturnValue {
                type: Constant
                value: 0
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2233
                counter: 6
              }
            }
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "rgid"
  }
  source: "TESLA_SYSCALL(\n\t    previously(mac_cred_check_setgid(ANY(ptr), rgid) == 0) ||\n\t    previously(mac_cred_check_setregid(ANY(ptr), rgid, ANY(int))\n\t    == 0) ||\n\t    previously(mac_cred_check_setresgid(ANY(ptr), rgid, ANY(int),\n\t    ANY(int)) == 0));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2235
      counter: 7
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "setsugid"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: "p"
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2235
                counter: 7
              }
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2235
                counter: 7
              }
            }
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "setsugid"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: "p"
              }
              strict: false
            }
          }
        }
      }
    }
  }
  source: "TESLA_SYSCALL(previously(called(setsugid)) ||\n\t    eventually(called(setsugid)));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2255
      counter: 8
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: BOOLEAN_EXPR
        booleanExpr {
          operation: BE_Or
          expression {
            type: SEQUENCE
            sequence {
              expression {
                type: NULL_EXPR
              }
              expression {
                type: FUNCTION
                function {
                  function {
                    name: "mac_cred_check_setuid"
                  }
                  direction: Exit
                  context: Callee
                  argument {
                    type: Any
                  }
                  argument {
                    type: Any
                  }
                  expectedReturnValue {
                    type: Constant
                    value: 0
                  }
                  strict: false
                }
              }
              expression {
                type: ASSERTION_SITE
                assertSite {
                  location {
                    filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                    line: 2255
                    counter: 8
                  }
                }
              }
            }
          }
          expression {
            type: SEQUENCE
            sequence {
              expression {
                type: NULL_EXPR
              }
              expression {
                type: FUNCTION
                function {
                  function {
                    name: "mac_cred_check_setreuid"
                  }
                  direction: Exit
                  context: Callee
                  argument {
                    type: Any
                  }
                  argument {
                    type: Any
                  }
                  argument {
                    type: Any
                  }
                  expectedReturnValue {
                    type: Constant
                    value: 0
                  }
                  strict: false
                }
              }
              expression {
                type: ASSERTION_SITE
                assertSite {
                  location {
                    filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                    line: 2255
                    counter: 8
                  }
                }
              }
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "mac_cred_check_setresuid"
              }
              direction: Exit
              context: Callee
              argument {
                type: Any
              }
              argument {
                type: Any
              }
              argument {
                type: Any
              }
              argument {
                type: Any
              }
              expectedReturnValue {
                type: Constant
                value: 0
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2255
                counter: 8
              }
            }
          }
        }
      }
    }
  }
  source: "TESLA_SYSCALL(\n\t    previously(mac_cred_check_setuid(ANY(ptr), ANY(int)) == 0) ||\n\t    previously(mac_cred_check_setreuid(ANY(ptr), ANY(int),\n\t    ANY(int)) == 0) ||\n\t    previously(mac_cred_check_setresuid(ANY(ptr), ANY(int),\n\t    ANY(int), ANY(int)) == 0));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2257
      counter: 9
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "setsugid"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: "p"
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2257
                counter: 9
              }
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2257
                counter: 9
              }
            }
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "setsugid"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: "p"
              }
              strict: false
            }
          }
        }
      }
    }
  }
  source: "TESLA_SYSCALL(previously(called(setsugid)) ||\n\t    eventually(called(setsugid)));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2277
      counter: 10
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: BOOLEAN_EXPR
        booleanExpr {
          operation: BE_Or
          expression {
            type: SEQUENCE
            sequence {
              expression {
                type: NULL_EXPR
              }
              expression {
                type: FUNCTION
                function {
                  function {
                    name: "mac_cred_check_setgid"
                  }
                  direction: Exit
                  context: Callee
                  argument {
                    type: Any
                  }
                  argument {
                    type: Any
                  }
                  expectedReturnValue {
                    type: Constant
                    value: 0
                  }
                  strict: false
                }
              }
              expression {
                type: ASSERTION_SITE
                assertSite {
                  location {
                    filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                    line: 2277
                    counter: 10
                  }
                }
              }
            }
          }
          expression {
            type: SEQUENCE
            sequence {
              expression {
                type: NULL_EXPR
              }
              expression {
                type: FUNCTION
                function {
                  function {
                    name: "mac_cred_check_setregid"
                  }
                  direction: Exit
                  context: Callee
                  argument {
                    type: Any
                  }
                  argument {
                    type: Any
                  }
                  argument {
                    type: Any
                  }
                  expectedReturnValue {
                    type: Constant
                    value: 0
                  }
                  strict: false
                }
              }
              expression {
                type: ASSERTION_SITE
                assertSite {
                  location {
                    filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                    line: 2277
                    counter: 10
                  }
                }
              }
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "mac_cred_check_setresgid"
              }
              direction: Exit
              context: Callee
              argument {
                type: Any
              }
              argument {
                type: Any
              }
              argument {
                type: Any
              }
              argument {
                type: Any
              }
              expectedReturnValue {
                type: Constant
                value: 0
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2277
                counter: 10
              }
            }
          }
        }
      }
    }
  }
  source: "TESLA_SYSCALL(\n\t    previously(mac_cred_check_setgid(ANY(ptr), ANY(int)) == 0) ||\n\t    previously(mac_cred_check_setregid(ANY(ptr), ANY(int), ANY(int))\n\t    == 0) ||\n\t    previously(mac_cred_check_setresgid(ANY(ptr), ANY(int), ANY(int),\n\t    ANY(int)) == 0));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2279
      counter: 11
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "setsugid"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: "p"
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2279
                counter: 11
              }
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
                line: 2279
                counter: 11
              }
            }
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "setsugid"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: "p"
              }
              strict: false
            }
          }
        }
      }
    }
  }
  source: "TESLA_SYSCALL(previously(called(setsugid)) ||\n\t    eventually(called(setsugid)));"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2156
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2158
      counter: 1
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2181
      counter: 2
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2183
      counter: 3
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2206
      counter: 4
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2208
      counter: 5
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2233
      counter: 6
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2235
      counter: 7
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2255
      counter: 8
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2257
      counter: 9
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2277
      counter: 10
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/kern_prot.c"
      line: 2279
      counter: 11
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 144
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 144
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 153
      counter: 1
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 153
            counter: 1
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 162
      counter: 2
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 162
            counter: 2
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 171
      counter: 3
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 171
            counter: 3
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 184
      counter: 4
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 184
            counter: 4
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 193
      counter: 5
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 193
            counter: 5
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 204
      counter: 6
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 204
            counter: 6
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 213
      counter: 7
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 213
            counter: 7
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 222
      counter: 8
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 222
            counter: 8
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 231
      counter: 9
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 231
            counter: 9
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 240
      counter: 10
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 240
            counter: 10
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 249
      counter: 11
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 249
            counter: 11
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 259
      counter: 12
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_proc"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 259
            counter: 12
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_proc"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), td->td_proc) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 272
      counter: 13
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "p"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 272
            counter: 13
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "p"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), p) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 369
      counter: 14
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "p"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 369
            counter: 14
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "p"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), p) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 477
      counter: 15
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "p_candebug"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "p"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
            line: 477
            counter: 15
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "p"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(p_candebug(ANY(ptr), p) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 144
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 153
      counter: 1
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 162
      counter: 2
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 171
      counter: 3
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 184
      counter: 4
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 193
      counter: 5
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 204
      counter: 6
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 213
      counter: 7
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 222
      counter: 8
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 231
      counter: 9
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 240
      counter: 10
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 249
      counter: 11
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 259
      counter: 12
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 272
      counter: 13
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 369
      counter: 14
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/sys_process.c"
      line: 477
      counter: 15
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 429
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_socket_check_create"
          }
          direction: Exit
          context: Callee
          argument {
            type: Variable
            index: 0
            name: "cred"
          }
          argument {
            type: Variable
            index: 1
            name: "dom"
          }
          argument {
            type: Variable
            index: 2
            name: "type"
          }
          argument {
            type: Variable
            index: 3
            name: "proto"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
            line: 429
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "cred"
  }
  argument {
    type: Variable
    index: 1
    name: "dom"
  }
  argument {
    type: Variable
    index: 2
    name: "type"
  }
  argument {
    type: Variable
    index: 3
    name: "proto"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_socket_check_create(cred, dom, type,\n\t    proto) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 629
      counter: 1
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_socket_check_bind"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "so"
          }
          argument {
            type: Variable
            index: 1
            name: "nam"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
            line: 629
            counter: 1
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "so"
  }
  argument {
    type: Variable
    index: 1
    name: "nam"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_socket_check_bind(ANY(ptr), so, nam) ==\n\t    0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 645
      counter: 2
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_socket_check_bind"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "so"
          }
          argument {
            type: Variable
            index: 1
            name: "nam"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
            line: 645
            counter: 2
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "so"
  }
  argument {
    type: Variable
    index: 1
    name: "nam"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_socket_check_bind(ANY(ptr), so, nam) ==\n\t    0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 672
      counter: 3
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_socket_check_listen"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "so"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
            line: 672
            counter: 3
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "so"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_socket_check_listen(ANY(ptr), so) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 925
      counter: 4
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_socket_check_accept"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Any
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
            line: 925
            counter: 4
          }
        }
      }
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_socket_check_accept(ANY(ptr), ANY(ptr)) ==\n\t    0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 945
      counter: 5
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_socket_check_connect"
          }
          direction: Exit
          context: Callee
          argument {
            type: Field
            index: 0
            field {
              type: "thread"
              base {
                type: Variable
                name: "td"
              }
              name: "td_ucred"
              index: 37
            }
          }
          argument {
            type: Variable
            index: 1
            name: "so"
          }
          argument {
            type: Variable
            index: 2
            name: "nam"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
            line: 945
            counter: 5
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "thread"
      base {
        type: Variable
        name: "td"
      }
      name: "td_ucred"
      index: 37
    }
  }
  argument {
    type: Variable
    index: 1
    name: "so"
  }
  argument {
    type: Variable
    index: 2
    name: "nam"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_socket_check_connect(td->td_ucred, so,\n\t    nam) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 1486
      counter: 6
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_socket_check_send"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "so"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
            line: 1486
            counter: 6
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "so"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_socket_check_send(ANY(ptr), so) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 2446
      counter: 7
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_socket_check_receive"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "so"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
            line: 2446
            counter: 7
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "so"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_socket_check_receive(ANY(ptr), so) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 3127
      counter: 8
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_socket_check_poll"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "so"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
            line: 3127
            counter: 8
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "so"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_socket_check_poll(ANY(ptr), so) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 3176
      counter: 9
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_socket_check_poll"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "so"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
            line: 3176
            counter: 9
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "so"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_socket_check_poll(ANY(ptr), so) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 429
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 629
      counter: 1
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 645
      counter: 2
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 672
      counter: 3
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 925
      counter: 4
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 945
      counter: 5
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 1486
      counter: 6
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 2446
      counter: 7
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 3127
      counter: 8
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/uipc_socket.c"
      line: 3176
      counter: 9
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/vfs_vnops.c"
      line: 714
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "fget_unlocked"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Any
          }
          argument {
            type: Constant
            value: 1
            constantMatch: Mask
          }
          argument {
            type: Any
          }
          argument {
            type: Indirect
            index: 0
            indirection {
              type: Variable
              name: "fp"
            }
          }
          argument {
            type: Any
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/vfs_vnops.c"
            line: 714
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Indirect
    index: 0
    indirection {
      type: Variable
      name: "fp"
    }
  }
  source: "TESLA_WITHIN(kern_readv, previously(fget_unlocked(ANY(ptr), ANY(int),\n\t    bitmask(CAP_READ), ANY(int), &fp, ANY(ptr)) == 0));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/vfs_vnops.c"
      line: 716
      counter: 1
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "fget_unlocked"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Any
          }
          argument {
            type: Constant
            value: 129
            constantMatch: Mask
          }
          argument {
            type: Any
          }
          argument {
            type: Indirect
            index: 0
            indirection {
              type: Variable
              name: "fp"
            }
          }
          argument {
            type: Any
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/vfs_vnops.c"
            line: 716
            counter: 1
          }
        }
      }
    }
  }
  argument {
    type: Indirect
    index: 0
    indirection {
      type: Variable
      name: "fp"
    }
  }
  source: "TESLA_WITHIN(kern_preadv, previously(fget_unlocked(ANY(ptr), ANY(int),\n\t    bitmask(CAP_PREAD), ANY(int), &fp, ANY(ptr)) == 0));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/vfs_vnops.c"
      line: 823
      counter: 2
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "fget_unlocked"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Any
          }
          argument {
            type: Constant
            value: 2
            constantMatch: Mask
          }
          argument {
            type: Any
          }
          argument {
            type: Indirect
            index: 0
            indirection {
              type: Variable
              name: "fp"
            }
          }
          argument {
            type: Any
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/vfs_vnops.c"
            line: 823
            counter: 2
          }
        }
      }
    }
  }
  argument {
    type: Indirect
    index: 0
    indirection {
      type: Variable
      name: "fp"
    }
  }
  source: "TESLA_WITHIN(kern_writev, previously(fget_unlocked(ANY(ptr), ANY(int),\n\t    bitmask(CAP_WRITE), ANY(int), &fp, ANY(ptr)) == 0));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/vfs_vnops.c"
      line: 825
      counter: 3
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "fget_unlocked"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Any
          }
          argument {
            type: Constant
            value: 130
            constantMatch: Mask
          }
          argument {
            type: Any
          }
          argument {
            type: Indirect
            index: 0
            indirection {
              type: Variable
              name: "fp"
            }
          }
          argument {
            type: Any
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/vfs_vnops.c"
            line: 825
            counter: 3
          }
        }
      }
    }
  }
  argument {
    type: Indirect
    index: 0
    indirection {
      type: Variable
      name: "fp"
    }
  }
  source: "TESLA_WITHIN(kern_pwritev, previously(fget_unlocked(ANY(ptr), ANY(int),\n\t    bitmask(CAP_PWRITE), ANY(int), &fp, ANY(ptr)) == 0));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/vfs_vnops.c"
      line: 1215
      counter: 4
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "fget_unlocked"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Any
          }
          argument {
            type: Constant
            value: 64
            constantMatch: Mask
          }
          argument {
            type: Any
          }
          argument {
            type: Indirect
            index: 0
            indirection {
              type: Variable
              name: "fp"
            }
          }
          argument {
            type: Any
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/vfs_vnops.c"
            line: 1215
            counter: 4
          }
        }
      }
    }
  }
  argument {
    type: Indirect
    index: 0
    indirection {
      type: Variable
      name: "fp"
    }
  }
  source: "TESLA_WITHIN(kern_ftruncate, previously(fget_unlocked(ANY(ptr),\n\t    ANY(int), bitmask(CAP_FTRUNCATE), ANY(int), &fp, ANY(ptr)) == 0));"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/vfs_vnops.c"
      line: 714
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "kern_readv"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: "td"
      }
      argument {
        type: Any
        name: "fd"
      }
      argument {
        type: Any
        name: "auio"
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "kern_readv"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: "td"
      }
      argument {
        type: Any
        name: "fd"
      }
      argument {
        type: Any
        name: "auio"
      }
      expectedReturnValue {
        type: Any
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/vfs_vnops.c"
      line: 716
      counter: 1
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "kern_preadv"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: "td"
      }
      argument {
        type: Any
        name: "fd"
      }
      argument {
        type: Any
        name: "auio"
      }
      argument {
        type: Any
        name: "offset"
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "kern_preadv"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: "td"
      }
      argument {
        type: Any
        name: "fd"
      }
      argument {
        type: Any
        name: "auio"
      }
      argument {
        type: Any
        name: "offset"
      }
      expectedReturnValue {
        type: Any
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/vfs_vnops.c"
      line: 823
      counter: 2
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "kern_writev"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: "td"
      }
      argument {
        type: Any
        name: "fd"
      }
      argument {
        type: Any
        name: "auio"
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "kern_writev"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: "td"
      }
      argument {
        type: Any
        name: "fd"
      }
      argument {
        type: Any
        name: "auio"
      }
      expectedReturnValue {
        type: Any
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/vfs_vnops.c"
      line: 825
      counter: 3
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "kern_pwritev"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: "td"
      }
      argument {
        type: Any
        name: "fd"
      }
      argument {
        type: Any
        name: "auio"
      }
      argument {
        type: Any
        name: "offset"
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "kern_pwritev"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: "td"
      }
      argument {
        type: Any
        name: "fd"
      }
      argument {
        type: Any
        name: "auio"
      }
      argument {
        type: Any
        name: "offset"
      }
      expectedReturnValue {
        type: Any
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/kern/vfs_vnops.c"
      line: 1215
      counter: 4
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "kern_ftruncate"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: "td"
      }
      argument {
        type: Any
        name: "fd"
      }
      argument {
        type: Any
        name: "length"
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "kern_ftruncate"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: "td"
      }
      argument {
        type: Any
        name: "fd"
      }
      argument {
        type: Any
        name: "length"
      }
      expectedReturnValue {
        type: Any
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_cred.c"
      line: 200
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_cred_check_relabel"
          }
          direction: Exit
          context: Callee
          argument {
            type: Variable
            index: 0
            name: "cred"
          }
          argument {
            type: Variable
            index: 1
            name: "newlabel"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_cred.c"
            line: 200
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "cred"
  }
  argument {
    type: Variable
    index: 1
    name: "newlabel"
  }
  source: "TESLA_SYSCALL(previously(mac_cred_check_relabel(cred, newlabel) ==\n\t    0));"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_cred.c"
      line: 200
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_pipe.c"
      line: 147
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_pipe_check_relabel"
          }
          direction: Exit
          context: Callee
          argument {
            type: Variable
            index: 0
            name: "cred"
          }
          argument {
            type: Variable
            index: 1
            name: "pp"
          }
          argument {
            type: Variable
            index: 2
            name: "newlabel"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_pipe.c"
            line: 147
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "cred"
  }
  argument {
    type: Variable
    index: 1
    name: "pp"
  }
  argument {
    type: Variable
    index: 2
    name: "newlabel"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_pipe_check_relabel(cred, pp, newlabel)\n\t    == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_pipe.c"
      line: 147
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_process.c"
      line: 175
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_process.c"
            line: 175
            counter: 0
          }
        }
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_execve_exit"
          }
          direction: Entry
          context: Callee
          argument {
            type: Any
            name: "imgp"
          }
          strict: false
        }
      }
    }
  }
  source: "TESLA_SYSCALL_EVENTUALLY(called(mac_execve_exit));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_process.c"
      line: 184
      counter: 1
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_execve_enter"
          }
          direction: Entry
          context: Callee
          argument {
            type: Variable
            index: 0
            name: "imgp"
          }
          argument {
            type: Any
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_process.c"
            line: 184
            counter: 1
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "imgp"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(called(mac_execve_enter(imgp, ANY(ptr))));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_process.c"
      line: 203
      counter: 2
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_process.c"
            line: 203
            counter: 2
          }
        }
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_execve_interpreter_exit"
          }
          direction: Entry
          context: Callee
          argument {
            type: Any
            name: "interpvplabel"
          }
          strict: false
        }
      }
    }
  }
  source: "TESLA_SYSCALL_EVENTUALLY(called(mac_execve_interpreter_exit));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_process.c"
      line: 213
      counter: 3
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_execve_interpreter_enter"
          }
          direction: Entry
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Any
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_process.c"
            line: 213
            counter: 3
          }
        }
      }
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(called(\n\t\t    mac_execve_interpreter_enter(ANY(ptr), ANY(ptr))));"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_process.c"
      line: 175
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_process.c"
      line: 184
      counter: 1
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_process.c"
      line: 203
      counter: 2
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_process.c"
      line: 213
      counter: 3
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_socket.c"
      line: 262
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_socket_check_relabel"
          }
          direction: Exit
          context: Callee
          argument {
            type: Variable
            index: 0
            name: "cred"
          }
          argument {
            type: Variable
            index: 1
            name: "so"
          }
          argument {
            type: Variable
            index: 2
            name: "newlabel"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_socket.c"
            line: 262
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "cred"
  }
  argument {
    type: Variable
    index: 1
    name: "so"
  }
  argument {
    type: Variable
    index: 2
    name: "newlabel"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_socket_check_relabel(cred, so, newlabel)\n\t    == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_socket.c"
      line: 262
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_vfs.c"
      line: 953
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_relabel"
          }
          direction: Exit
          context: Callee
          argument {
            type: Variable
            index: 0
            name: "cred"
          }
          argument {
            type: Variable
            index: 1
            name: "vp"
          }
          argument {
            type: Variable
            index: 2
            name: "newlabel"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_vfs.c"
            line: 953
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "cred"
  }
  argument {
    type: Variable
    index: 1
    name: "vp"
  }
  argument {
    type: Variable
    index: 2
    name: "newlabel"
  }
  source: "TESLA_SYSCALL(previously(mac_vnode_check_relabel(cred, vp, newlabel)\n\t    == 0));"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/security/mac/mac_vfs.c"
      line: 953
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
      line: 444
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "ufs_readdir"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: ""
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
                line: 444
                counter: 0
              }
            }
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "ufs_readdir"
              }
              direction: Exit
              context: Callee
              argument {
                type: Any
                name: ""
              }
              expectedReturnValue {
                type: Any
              }
              strict: false
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "mac_vnode_check_read"
              }
              direction: Exit
              context: Callee
              argument {
                type: Any
              }
              argument {
                type: Any
              }
              argument {
                type: Variable
                index: 0
                name: "vp"
              }
              expectedReturnValue {
                type: Constant
                value: 0
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
                line: 444
                counter: 0
              }
            }
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "vp"
  }
  source: "TESLA_SYSCALL(incallstack(ufs_readdir) ||\n\t    previously(mac_vnode_check_read(ANY(ptr), ANY(ptr), vp) == 0));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
      line: 672
      counter: 1
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_write"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "vp"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
            line: 672
            counter: 1
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "vp"
  }
  source: "TESLA_SYSCALL(previously(mac_vnode_check_write(ANY(ptr), ANY(ptr), vp)\n\t    == 0));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
      line: 1489
      counter: 2
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "ufs_setacl"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: ""
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
                line: 1489
                counter: 2
              }
            }
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "ufs_setacl"
              }
              direction: Exit
              context: Callee
              argument {
                type: Any
                name: ""
              }
              expectedReturnValue {
                type: Any
              }
              strict: false
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "mac_vnode_check_deleteextattr"
              }
              direction: Exit
              context: Callee
              argument {
                type: Any
              }
              argument {
                type: Field
                index: 0
                field {
                  type: "vop_deleteextattr_args"
                  base {
                    type: Variable
                    name: "ap"
                  }
                  name: "a_vp"
                  index: 1
                }
              }
              argument {
                type: Field
                index: 1
                field {
                  type: "vop_deleteextattr_args"
                  base {
                    type: Variable
                    name: "ap"
                  }
                  name: "a_attrnamespace"
                  index: 2
                }
              }
              argument {
                type: Field
                index: 2
                field {
                  type: "vop_deleteextattr_args"
                  base {
                    type: Variable
                    name: "ap"
                  }
                  name: "a_name"
                  index: 3
                }
              }
              expectedReturnValue {
                type: Constant
                value: 0
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
                line: 1489
                counter: 2
              }
            }
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "vop_deleteextattr_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_vp"
      index: 1
    }
  }
  argument {
    type: Field
    index: 1
    field {
      type: "vop_deleteextattr_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_attrnamespace"
      index: 2
    }
  }
  argument {
    type: Field
    index: 2
    field {
      type: "vop_deleteextattr_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_name"
      index: 3
    }
  }
  source: "TESLA_SYSCALL(incallstack(ufs_setacl) ||\n\t    previously(mac_vnode_check_deleteextattr(ANY(ptr), ap->a_vp,\n\t    ap->a_attrnamespace, ap->a_name) == 0));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
      line: 1582
      counter: 3
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "ufs_getacl"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: ""
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
                line: 1582
                counter: 3
              }
            }
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "ufs_getacl"
              }
              direction: Exit
              context: Callee
              argument {
                type: Any
                name: ""
              }
              expectedReturnValue {
                type: Any
              }
              strict: false
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "mac_vnode_check_getextattr"
              }
              direction: Exit
              context: Callee
              argument {
                type: Any
              }
              argument {
                type: Field
                index: 0
                field {
                  type: "vop_getextattr_args"
                  base {
                    type: Variable
                    name: "ap"
                  }
                  name: "a_vp"
                  index: 1
                }
              }
              argument {
                type: Field
                index: 1
                field {
                  type: "vop_getextattr_args"
                  base {
                    type: Variable
                    name: "ap"
                  }
                  name: "a_attrnamespace"
                  index: 2
                }
              }
              argument {
                type: Field
                index: 2
                field {
                  type: "vop_getextattr_args"
                  base {
                    type: Variable
                    name: "ap"
                  }
                  name: "a_name"
                  index: 3
                }
              }
              expectedReturnValue {
                type: Constant
                value: 0
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
                line: 1582
                counter: 3
              }
            }
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "vop_getextattr_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_vp"
      index: 1
    }
  }
  argument {
    type: Field
    index: 1
    field {
      type: "vop_getextattr_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_attrnamespace"
      index: 2
    }
  }
  argument {
    type: Field
    index: 2
    field {
      type: "vop_getextattr_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_name"
      index: 3
    }
  }
  source: "TESLA_SYSCALL(incallstack(ufs_getacl) ||\n\t    previously(mac_vnode_check_getextattr(ANY(ptr), ap->a_vp,\n\t    ap->a_attrnamespace, ap->a_name) == 0));"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
      line: 1643
      counter: 4
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_listextattr"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "vop_listextattr_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_vp"
              index: 1
            }
          }
          argument {
            type: Field
            index: 1
            field {
              type: "vop_listextattr_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_attrnamespace"
              index: 2
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
            line: 1643
            counter: 4
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "vop_listextattr_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_vp"
      index: 1
    }
  }
  argument {
    type: Field
    index: 1
    field {
      type: "vop_listextattr_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_attrnamespace"
      index: 2
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_listextattr(ANY(ptr),\n\t    ap->a_vp, ap->a_attrnamespace) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
      line: 1713
      counter: 5
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "ufs_setacl"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: ""
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
                line: 1713
                counter: 5
              }
            }
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "ufs_setacl"
              }
              direction: Exit
              context: Callee
              argument {
                type: Any
                name: ""
              }
              expectedReturnValue {
                type: Any
              }
              strict: false
            }
          }
        }
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_setextattr"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "vop_setextattr_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_vp"
              index: 1
            }
          }
          argument {
            type: Field
            index: 1
            field {
              type: "vop_setextattr_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_attrnamespace"
              index: 2
            }
          }
          argument {
            type: Field
            index: 2
            field {
              type: "vop_setextattr_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_name"
              index: 3
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "vop_setextattr_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_vp"
      index: 1
    }
  }
  argument {
    type: Field
    index: 1
    field {
      type: "vop_setextattr_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_attrnamespace"
      index: 2
    }
  }
  argument {
    type: Field
    index: 2
    field {
      type: "vop_setextattr_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_name"
      index: 3
    }
  }
  source: "TESLA_SYSCALL(incallstack(ufs_setacl) ||\n\t    mac_vnode_check_setextattr(ANY(ptr), ap->a_vp,\n\t    ap->a_attrnamespace, ap->a_name) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
      line: 444
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
      line: 672
      counter: 1
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
      line: 1489
      counter: 2
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
      line: 1582
      counter: 3
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
      line: 1643
      counter: 4
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ffs/ffs_vnops.c"
      line: 1713
      counter: 5
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_acl.c"
      line: 368
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_getacl"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "vop_getacl_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_vp"
              index: 1
            }
          }
          argument {
            type: Field
            index: 1
            field {
              type: "vop_getacl_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_type"
              index: 2
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_acl.c"
            line: 368
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "vop_getacl_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_vp"
      index: 1
    }
  }
  argument {
    type: Field
    index: 1
    field {
      type: "vop_getacl_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_type"
      index: 2
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_getacl(ANY(ptr), ap->a_vp,\n\t    ap->a_type) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_acl.c"
      line: 625
      counter: 1
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_deleteacl"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "vop_setacl_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_vp"
              index: 1
            }
          }
          argument {
            type: Field
            index: 1
            field {
              type: "vop_setacl_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_type"
              index: 2
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_acl.c"
            line: 625
            counter: 1
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "vop_setacl_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_vp"
      index: 1
    }
  }
  argument {
    type: Field
    index: 1
    field {
      type: "vop_setacl_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_type"
      index: 2
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_deleteacl(ANY(ptr),\n\t\t    ap->a_vp, ap->a_type) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_acl.c"
      line: 628
      counter: 2
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_setacl"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "vop_setacl_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_vp"
              index: 1
            }
          }
          argument {
            type: Field
            index: 1
            field {
              type: "vop_setacl_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_type"
              index: 2
            }
          }
          argument {
            type: Field
            index: 2
            field {
              type: "vop_setacl_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_aclp"
              index: 3
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_acl.c"
            line: 628
            counter: 2
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "vop_setacl_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_vp"
      index: 1
    }
  }
  argument {
    type: Field
    index: 1
    field {
      type: "vop_setacl_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_type"
      index: 2
    }
  }
  argument {
    type: Field
    index: 2
    field {
      type: "vop_setacl_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_aclp"
      index: 3
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_setacl(ANY(ptr),\n\t\t    ap->a_vp, ap->a_type, ap->a_aclp) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_acl.c"
      line: 368
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_acl.c"
      line: 625
      counter: 1
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_acl.c"
      line: 628
      counter: 2
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_lookup.c"
      line: 217
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_lookup"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "vop_cachedlookup_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_dvp"
              index: 1
            }
          }
          argument {
            type: Field
            index: 1
            field {
              type: "vop_cachedlookup_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_cnp"
              index: 3
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_lookup.c"
            line: 217
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "vop_cachedlookup_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_dvp"
      index: 1
    }
  }
  argument {
    type: Field
    index: 1
    field {
      type: "vop_cachedlookup_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_cnp"
      index: 3
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_lookup(ANY(ptr), ap->a_dvp,\n\t    ap->a_cnp) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_lookup.c"
      line: 217
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 278
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "kern_execve"
              }
              direction: Entry
              context: Callee
              argument {
                type: Any
                name: "td"
              }
              argument {
                type: Any
                name: "args"
              }
              argument {
                type: Any
                name: "mac_p"
              }
              strict: false
            }
          }
          expression {
            type: ASSERTION_SITE
            assertSite {
              location {
                filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
                line: 278
                counter: 0
              }
            }
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "kern_execve"
              }
              direction: Exit
              context: Callee
              argument {
                type: Any
                name: "td"
              }
              argument {
                type: Any
                name: "args"
              }
              argument {
                type: Any
                name: "mac_p"
              }
              expectedReturnValue {
                type: Any
              }
              strict: false
            }
          }
        }
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_open"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "vp"
          }
          argument {
            type: Any
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "vp"
  }
  source: "TESLA_SYSCALL(incallstack(kern_execve) ||\n\t    mac_vnode_check_open(ANY(ptr), vp, ANY(int)) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 542
      counter: 1
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_setflags"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "vp"
          }
          argument {
            type: Any
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
            line: 542
            counter: 1
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "vp"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_setflags(ANY(ptr),\n\t\t    vp, ANY(int)) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 609
      counter: 2
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_write"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "vp"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
            line: 609
            counter: 2
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "vp"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_write(ANY(ptr),\n\t\t    ANY(ptr), vp) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 796
      counter: 3
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_setmode"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "vp"
          }
          argument {
            type: Variable
            index: 1
            name: "mode"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
            line: 796
            counter: 3
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "vp"
  }
  argument {
    type: Variable
    index: 1
    name: "mode"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_setmode(ANY(ptr), vp, mode)\n\t    == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 867
      counter: 4
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_setowner"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "vp"
          }
          argument {
            type: Variable
            index: 1
            name: "uid"
          }
          argument {
            type: Variable
            index: 2
            name: "gid"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
            line: 867
            counter: 4
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "vp"
  }
  argument {
    type: Variable
    index: 1
    name: "uid"
  }
  argument {
    type: Variable
    index: 2
    name: "gid"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_setowner(ANY(ptr), vp, uid,\n\t    gid) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 984
      counter: 5
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_unlink"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "dvp"
          }
          argument {
            type: Variable
            index: 1
            name: "vp"
          }
          argument {
            type: Field
            index: 2
            field {
              type: "vop_remove_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_cnp"
              index: 3
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
            line: 984
            counter: 5
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "dvp"
  }
  argument {
    type: Variable
    index: 1
    name: "vp"
  }
  argument {
    type: Field
    index: 2
    field {
      type: "vop_remove_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_cnp"
      index: 3
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_unlink(ANY(ptr), dvp, vp,\n\t    ap->a_cnp) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 1038
      counter: 6
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_link"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "tdvp"
          }
          argument {
            type: Variable
            index: 1
            name: "vp"
          }
          argument {
            type: Variable
            index: 2
            name: "cnp"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
            line: 1038
            counter: 6
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "tdvp"
  }
  argument {
    type: Variable
    index: 1
    name: "vp"
  }
  argument {
    type: Variable
    index: 2
    name: "cnp"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_link(ANY(ptr), tdvp, vp,\n\t    cnp) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 1206
      counter: 7
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_rename_from"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "fdvp"
          }
          argument {
            type: Variable
            index: 1
            name: "fvp"
          }
          argument {
            type: Variable
            index: 2
            name: "fcnp"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
            line: 1206
            counter: 7
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "fdvp"
  }
  argument {
    type: Variable
    index: 1
    name: "fvp"
  }
  argument {
    type: Variable
    index: 2
    name: "fcnp"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_rename_from(ANY(ptr), fdvp,\n\t    fvp, fcnp) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 1208
      counter: 8
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_rename_to"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "tdvp"
          }
          argument {
            type: Variable
            index: 1
            name: "tvp"
          }
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 2
            name: "tcnp"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
            line: 1208
            counter: 8
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "tdvp"
  }
  argument {
    type: Variable
    index: 1
    name: "tvp"
  }
  argument {
    type: Variable
    index: 2
    name: "tcnp"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_rename_to(ANY(ptr), tdvp,\n\t    tvp, ANY(int), tcnp) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 1868
      counter: 9
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_create"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "dvp"
          }
          argument {
            type: Variable
            index: 1
            name: "cnp"
          }
          argument {
            type: Variable
            index: 2
            name: "vap"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
            line: 1868
            counter: 9
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "dvp"
  }
  argument {
    type: Variable
    index: 1
    name: "cnp"
  }
  argument {
    type: Variable
    index: 2
    name: "vap"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_create(ANY(ptr), dvp, cnp,\n\t    vap) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 2107
      counter: 10
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_unlink"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "dvp"
          }
          argument {
            type: Variable
            index: 1
            name: "vp"
          }
          argument {
            type: Variable
            index: 2
            name: "cnp"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
            line: 2107
            counter: 10
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "dvp"
  }
  argument {
    type: Variable
    index: 1
    name: "vp"
  }
  argument {
    type: Variable
    index: 2
    name: "cnp"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_unlink(ANY(ptr), dvp, vp,\n\t    cnp) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 2256
      counter: 11
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_readdir"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Field
            index: 0
            field {
              type: "vop_readdir_args"
              base {
                type: Variable
                name: "ap"
              }
              name: "a_vp"
              index: 1
            }
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
            line: 2256
            counter: 11
          }
        }
      }
    }
  }
  argument {
    type: Field
    index: 0
    field {
      type: "vop_readdir_args"
      base {
        type: Variable
        name: "ap"
      }
      name: "a_vp"
      index: 1
    }
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_readdir(ANY(ptr), ap->a_vp)\n\t    == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 2369
      counter: 12
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_readlink"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "vp"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
            line: 2369
            counter: 12
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "vp"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_readlink(ANY(ptr), vp) == 0);"
}
automaton {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 2671
      counter: 13
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "mac_vnode_check_create"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "dvp"
          }
          argument {
            type: Variable
            index: 1
            name: "cnp"
          }
          argument {
            type: Any
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: ASSERTION_SITE
        assertSite {
          location {
            filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
            line: 2671
            counter: 13
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "dvp"
  }
  argument {
    type: Variable
    index: 1
    name: "cnp"
  }
  source: "TESLA_SYSCALL_PREVIOUSLY(mac_vnode_check_create(ANY(ptr), dvp, cnp,\n\t    ANY(ptr)) == 0);"
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 278
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 542
      counter: 1
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 609
      counter: 2
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 796
      counter: 3
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 867
      counter: 4
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 984
      counter: 5
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 1038
      counter: 6
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 1206
      counter: 7
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 1208
      counter: 8
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 1868
      counter: 9
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 2107
      counter: 10
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 2256
      counter: 11
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 2369
      counter: 12
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "/usr/home/robert/p4/projects/ctsrd/tesla/src/sys/ufs/ufs/ufs_vnops.c"
      line: 2671
      counter: 13
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "amd64_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: ""
      }
      argument {
        type: Any
        name: ""
      }
      strict: false
    }
  }
}
