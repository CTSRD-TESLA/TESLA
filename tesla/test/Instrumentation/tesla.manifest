automaton {
  identifier {
    location {
      filename: "crypto.c"
      line: 50
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "DES_set_key"
          }
          direction: Exit
          context: Caller
          argument {
            type: Variable
            index: 0
            name: "key"
          }
          argument {
            type: Variable
            index: 1
            name: "schedule"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: NOW
        now {
          location {
            filename: "crypto.c"
            line: 50
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "key"
  }
  argument {
    type: Variable
    index: 1
    name: "schedule"
  }
}
automaton {
  identifier {
    name: "active_close"
  }
  context: Global
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: FIELD_ASSIGN
        fieldAssign {
          operation: SimpleAssign
          value {
            type: Constant
            name: "TCPS_FIN_WAIT_1"
            value: 6
          }
          strict: true
          field {
            type: "tcpcb"
            base {
              type: Variable
              index: 0
              name: "tp"
            }
            name: "t_state"
            index: 5
          }
        }
      }
      expression {
        type: BOOLEAN_EXPR
        booleanExpr {
          operation: BE_Xor
          expression {
            type: SEQUENCE
            sequence {
              expression {
                type: NULL_EXPR
              }
              expression {
                type: FIELD_ASSIGN
                fieldAssign {
                  operation: SimpleAssign
                  value {
                    type: Constant
                    name: "TCPS_CLOSING"
                    value: 7
                  }
                  strict: true
                  field {
                    type: "tcpcb"
                    base {
                      type: Variable
                      index: 0
                      name: "tp"
                    }
                    name: "t_state"
                    index: 5
                  }
                }
              }
              expression {
                type: FIELD_ASSIGN
                fieldAssign {
                  operation: SimpleAssign
                  value {
                    type: Constant
                    name: "TCPS_TIME_WAIT"
                    value: 10
                  }
                  strict: true
                  field {
                    type: "tcpcb"
                    base {
                      type: Variable
                      index: 0
                      name: "tp"
                    }
                    name: "t_state"
                    index: 5
                  }
                }
              }
            }
          }
          expression {
            type: SEQUENCE
            sequence {
              expression {
                type: NULL_EXPR
              }
              expression {
                type: FIELD_ASSIGN
                fieldAssign {
                  operation: SimpleAssign
                  value {
                    type: Constant
                    name: "TCPS_FIN_WAIT_2"
                    value: 9
                  }
                  strict: true
                  field {
                    type: "tcpcb"
                    base {
                      type: Variable
                      index: 0
                      name: "tp"
                    }
                    name: "t_state"
                    index: 5
                  }
                }
              }
              expression {
                type: FIELD_ASSIGN
                fieldAssign {
                  operation: SimpleAssign
                  value {
                    type: Constant
                    name: "TCPS_TIME_WAIT"
                    value: 10
                  }
                  strict: true
                  field {
                    type: "tcpcb"
                    base {
                      type: Variable
                      index: 0
                      name: "tp"
                    }
                    name: "t_state"
                    index: 5
                  }
                }
              }
            }
          }
        }
      }
      expression {
        type: FIELD_ASSIGN
        fieldAssign {
          operation: SimpleAssign
          value {
            type: Constant
            name: "TCPS_CLOSED"
            value: 0
          }
          strict: true
          field {
            type: "tcpcb"
            base {
              type: Variable
              index: 0
              name: "tp"
            }
            name: "t_state"
            index: 5
          }
        }
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "tcp_free"
          }
          direction: Entry
          context: Callee
          argument {
            type: Variable
            index: 0
            name: "tp"
          }
          strict: true
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "tp"
  }
}
automaton {
  identifier {
    name: "established"
  }
  context: Global
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: FIELD_ASSIGN
        fieldAssign {
          operation: SimpleAssign
          value {
            type: Constant
            name: "TCPS_ESTABLISHED"
            value: 4
          }
          strict: true
          field {
            type: "tcpcb"
            base {
              type: Variable
              index: 0
              name: "tp"
            }
            name: "t_state"
            index: 5
          }
        }
      }
      expression {
        type: BOOLEAN_EXPR
        booleanExpr {
          operation: BE_Xor
          expression {
            type: SUB_AUTOMATON
            subAutomaton {
              name: "active_close"
            }
          }
          expression {
            type: SEQUENCE
            sequence {
              expression {
                type: NULL_EXPR
              }
              expression {
                type: FIELD_ASSIGN
                fieldAssign {
                  operation: SimpleAssign
                  value {
                    type: Constant
                    name: "TCPS_CLOSE_WAIT"
                    value: 5
                  }
                  strict: true
                  field {
                    type: "tcpcb"
                    base {
                      type: Variable
                      index: 0
                      name: "tp"
                    }
                    name: "t_state"
                    index: 5
                  }
                }
              }
              expression {
                type: FIELD_ASSIGN
                fieldAssign {
                  operation: SimpleAssign
                  value {
                    type: Constant
                    name: "TCPS_LAST_ACK"
                    value: 8
                  }
                  strict: true
                  field {
                    type: "tcpcb"
                    base {
                      type: Variable
                      index: 0
                      name: "tp"
                    }
                    name: "t_state"
                    index: 5
                  }
                }
              }
              expression {
                type: BOOLEAN_EXPR
                booleanExpr {
                  operation: BE_Xor
                  expression {
                    type: NULL_EXPR
                  }
                  expression {
                    type: FIELD_ASSIGN
                    fieldAssign {
                      operation: SimpleAssign
                      value {
                        type: Constant
                        value: 0
                      }
                      strict: true
                      field {
                        type: "tcpcb"
                        base {
                          type: Variable
                          index: 0
                          name: "tp"
                        }
                        name: "t_state"
                        index: 5
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "tcp_free"
          }
          direction: Entry
          context: Callee
          argument {
            type: Variable
            index: 0
            name: "tp"
          }
          strict: true
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "tp"
  }
}
automaton {
  identifier {
    name: "my_tcpcb_assertion"
  }
  context: Global
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: FIELD_ASSIGN
        fieldAssign {
          operation: SimpleAssign
          value {
            type: Constant
            name: "TCPS_CLOSED"
            value: 0
          }
          strict: true
          field {
            type: "tcpcb"
            base {
              type: Variable
              index: 0
              name: "tp"
            }
            name: "t_state"
            index: 5
          }
        }
      }
      expression {
        type: BOOLEAN_EXPR
        booleanExpr {
          operation: BE_Xor
          expression {
            type: BOOLEAN_EXPR
            booleanExpr {
              operation: BE_Xor
              expression {
                type: SEQUENCE
                sequence {
                  expression {
                    type: NULL_EXPR
                  }
                  expression {
                    type: FIELD_ASSIGN
                    fieldAssign {
                      operation: SimpleAssign
                      value {
                        type: Constant
                        name: "TCPS_LISTEN"
                        value: 1
                      }
                      strict: true
                      field {
                        type: "tcpcb"
                        base {
                          type: Variable
                          index: 0
                          name: "tp"
                        }
                        name: "t_state"
                        index: 5
                      }
                    }
                  }
                  expression {
                    type: BOOLEAN_EXPR
                    booleanExpr {
                      operation: BE_Xor
                      expression {
                        type: NULL_EXPR
                      }
                      expression {
                        type: FIELD_ASSIGN
                        fieldAssign {
                          operation: SimpleAssign
                          value {
                            type: Constant
                            value: 0
                          }
                          strict: true
                          field {
                            type: "tcpcb"
                            base {
                              type: Variable
                              index: 0
                              name: "tp"
                            }
                            name: "t_state"
                            index: 5
                          }
                        }
                      }
                    }
                  }
                  expression {
                    type: FUNCTION
                    function {
                      function {
                        name: "tcp_free"
                      }
                      direction: Entry
                      context: Callee
                      argument {
                        type: Variable
                        index: 0
                        name: "tp"
                      }
                      strict: true
                    }
                  }
                }
              }
              expression {
                type: SEQUENCE
                sequence {
                  expression {
                    type: NULL_EXPR
                  }
                  expression {
                    type: BOOLEAN_EXPR
                    booleanExpr {
                      operation: BE_Xor
                      expression {
                        type: NULL_EXPR
                      }
                      expression {
                        type: FIELD_ASSIGN
                        fieldAssign {
                          operation: SimpleAssign
                          value {
                            type: Constant
                            value: 2
                          }
                          strict: true
                          field {
                            type: "tcpcb"
                            base {
                              type: Variable
                              index: 0
                              name: "tp"
                            }
                            name: "t_state"
                            index: 5
                          }
                        }
                      }
                    }
                  }
                  expression {
                    type: BOOLEAN_EXPR
                    booleanExpr {
                      operation: BE_Xor
                      expression {
                        type: SEQUENCE
                        sequence {
                          expression {
                            type: NULL_EXPR
                          }
                          expression {
                            type: FIELD_ASSIGN
                            fieldAssign {
                              operation: SimpleAssign
                              value {
                                type: Constant
                                value: 3
                              }
                              strict: true
                              field {
                                type: "tcpcb"
                                base {
                                  type: Variable
                                  index: 0
                                  name: "tp"
                                }
                                name: "t_state"
                                index: 5
                              }
                            }
                          }
                          expression {
                            type: BOOLEAN_EXPR
                            booleanExpr {
                              operation: BE_Xor
                              expression {
                                type: SUB_AUTOMATON
                                subAutomaton {
                                  name: "established"
                                }
                              }
                              expression {
                                type: SUB_AUTOMATON
                                subAutomaton {
                                  name: "active_close"
                                }
                              }
                            }
                          }
                        }
                      }
                      expression {
                        type: SUB_AUTOMATON
                        subAutomaton {
                          name: "established"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "tcp_free"
              }
              direction: Entry
              context: Callee
              argument {
                type: Variable
                index: 0
                name: "tp"
              }
              strict: true
            }
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "tp"
  }
}
automaton {
  identifier {
    location {
      filename: "example.c"
      line: 45
      counter: 0
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "security_check"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "o"
          }
          argument {
            type: Variable
            index: 1
            name: "op"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: NOW
        now {
          location {
            filename: "example.c"
            line: 45
            counter: 0
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "o"
  }
  argument {
    type: Variable
    index: 1
    name: "op"
  }
}
automaton {
  identifier {
    location {
      filename: "example.c"
      line: 48
      counter: 1
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "security_check"
          }
          direction: Entry
          context: Callee
          argument {
            type: Any
            name: "subject"
          }
          argument {
            type: Any
            name: "object"
          }
          argument {
            type: Any
            name: "op"
          }
          strict: false
        }
      }
      expression {
        type: NOW
        now {
          location {
            filename: "example.c"
            line: 48
            counter: 1
          }
        }
      }
    }
  }
}
automaton {
  identifier {
    location {
      filename: "example.c"
      line: 51
      counter: 2
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "hold"
          }
          direction: Entry
          context: Callee
          argument {
            type: Variable
            index: 0
            name: "o"
          }
          strict: false
        }
      }
      expression {
        type: NOW
        now {
          location {
            filename: "example.c"
            line: 51
            counter: 2
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "o"
  }
}
automaton {
  identifier {
    location {
      filename: "example.c"
      line: 52
      counter: 3
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "hold"
          }
          direction: Exit
          context: Callee
          argument {
            type: Variable
            index: 0
            name: "o"
          }
          strict: false
        }
      }
      expression {
        type: NOW
        now {
          location {
            filename: "example.c"
            line: 52
            counter: 3
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "o"
  }
}
automaton {
  identifier {
    location {
      filename: "example.c"
      line: 53
      counter: 4
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: NOW
        now {
          location {
            filename: "example.c"
            line: 53
            counter: 4
          }
        }
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "release"
          }
          direction: Entry
          context: Callee
          argument {
            type: Variable
            index: 0
            name: "o"
          }
          strict: false
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "o"
  }
}
automaton {
  identifier {
    location {
      filename: "example.c"
      line: 56
      counter: 5
    }
  }
  context: ThreadLocal
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FIELD_ASSIGN
        fieldAssign {
          operation: PlusEqual
          value {
            type: Constant
            value: 1
          }
          strict: false
          field {
            type: "object"
            base {
              type: Variable
              index: 0
              name: "o"
            }
            name: "refcount"
            index: 0
          }
        }
      }
      expression {
        type: NOW
        now {
          location {
            filename: "example.c"
            line: 56
            counter: 5
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "o"
  }
}
automaton {
  identifier {
    location {
      filename: "example.c"
      line: 63
      counter: 6
    }
  }
  context: ThreadLocal
  expression {
    type: BOOLEAN_EXPR
    booleanExpr {
      operation: BE_Or
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "security_check"
              }
              direction: Exit
              context: Callee
              argument {
                type: Any
              }
              argument {
                type: Variable
                index: 0
                name: "o"
              }
              argument {
                type: Variable
                index: 1
                name: "op"
              }
              expectedReturnValue {
                type: Constant
                value: 0
              }
              strict: false
            }
          }
          expression {
            type: NOW
            now {
              location {
                filename: "example.c"
                line: 63
                counter: 6
              }
            }
          }
        }
      }
      expression {
        type: SEQUENCE
        sequence {
          expression {
            type: NULL_EXPR
          }
          expression {
            type: NOW
            now {
              location {
                filename: "example.c"
                line: 63
                counter: 6
              }
            }
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "log_audit_record"
              }
              direction: Exit
              context: Callee
              argument {
                type: Variable
                index: 0
                name: "o"
              }
              argument {
                type: Variable
                index: 1
                name: "op"
              }
              expectedReturnValue {
                type: Constant
                value: 0
              }
              strict: false
            }
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "o"
  }
  argument {
    type: Variable
    index: 1
    name: "op"
  }
}
automaton {
  identifier {
    location {
      filename: "example.c"
      line: 75
      counter: 7
    }
  }
  context: Global
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: NULL_EXPR
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "get_object"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Any
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "security_check"
          }
          direction: Exit
          context: Callee
          argument {
            type: Any
          }
          argument {
            type: Variable
            index: 0
            name: "o"
          }
          argument {
            type: Variable
            index: 1
            name: "op"
          }
          expectedReturnValue {
            type: Constant
            value: 0
          }
          strict: false
        }
      }
      expression {
        type: BOOLEAN_EXPR
        booleanExpr {
          operation: BE_Or
          expression {
            type: FUNCTION
            function {
              function {
                name: "some_helper"
              }
              direction: Exit
              context: Callee
              argument {
                type: Variable
                index: 1
                name: "op"
              }
              expectedReturnValue {
                type: Constant
                value: 0
              }
              strict: false
            }
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "never_actually_called"
              }
              direction: Entry
              context: Callee
              strict: false
            }
          }
        }
      }
      expression {
        type: BOOLEAN_EXPR
        booleanExpr {
          operation: BE_Xor
          expression {
            type: FUNCTION
            function {
              function {
                name: "void_helper"
              }
              direction: Entry
              context: Callee
              argument {
                type: Variable
                index: 0
                name: "o"
              }
              strict: false
            }
          }
          expression {
            type: FUNCTION
            function {
              function {
                name: "void_helper2"
              }
              direction: Exit
              context: Callee
              argument {
                type: Variable
                index: 0
                name: "o"
              }
              strict: false
            }
          }
        }
      }
      expression {
        type: NOW
        now {
          location {
            filename: "example.c"
            line: 75
            counter: 7
          }
        }
      }
      expression {
        type: FUNCTION
        function {
          function {
            name: "release"
          }
          direction: Exit
          context: Callee
          argument {
            type: Variable
            index: 0
            name: "o"
          }
          strict: false
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "o"
  }
  argument {
    type: Variable
    index: 1
    name: "op"
  }
}
automaton {
  identifier {
    name: "some_structure_assertion"
  }
  context: Global
  expression {
    type: SEQUENCE
    sequence {
      expression {
        type: FIELD_ASSIGN
        fieldAssign {
          field {
            type: "some_structure"
            index: 0
            base {
              type: Variable
              index: 0
              name: "s"
            }
            name: "field0"
          }
          operation: SimpleAssign
          value {
            type: Constant
            name: "DIGITS_OF_PI"
            value: 314159265358979
          }
        }
      }
      expression {
        type: FIELD_ASSIGN
        fieldAssign {
          field {
            type: "some_structure"
            index: 1
            base {
              type: Variable
              index: 0
              name: "s"
            }
            name: "field0"
          }
          operation: SimpleAssign
          value {
            type: Constant
            value: 42
          }
        }
      }
      expression {
        type: FIELD_ASSIGN
        fieldAssign {
          field {
            type: "some_structure"
            index: 1
            base {
              type: Variable
              index: 0
              name: "s"
            }
            name: "field1"
          }
          operation: PlusEqual
          value {
            type: Constant
            value: 1
          }
        }
      }
      expression {
        type: FIELD_ASSIGN
        fieldAssign {
          field {
            type: "some_structure"
            index: 1
            base {
              type: Variable
              index: 0
              name: "s"
            }
            name: "field1"
          }
          operation: MinusEqual
          value {
            type: Constant
            value: 1
          }
        }
      }
    }
  }
  argument {
    type: Variable
    index: 0
    name: "s"
  }
}
root {
  identifier {
    name: "some_structure_assertion"
  }
}
root {
  identifier {
    location {
      filename: "crypto.c"
      line: 50
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      expectedReturnValue {
        type: Any
      }
      strict: false
    }
  }
}
root {
  identifier {
    name: "my_tcpcb_assertion"
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "tcp_init"
      }
      direction: Entry
      context: Callee
      argument {
        type: Variable
        index: 0
        name: "tp"
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "tcp_free"
      }
      direction: Exit
      context: Callee
      argument {
        type: Variable
        index: 0
        name: "tp"
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "example.c"
      line: 45
      counter: 0
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      expectedReturnValue {
        type: Any
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "example.c"
      line: 48
      counter: 1
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      expectedReturnValue {
        type: Any
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "example.c"
      line: 51
      counter: 2
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      expectedReturnValue {
        type: Any
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "example.c"
      line: 52
      counter: 3
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      expectedReturnValue {
        type: Any
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "example.c"
      line: 53
      counter: 4
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      expectedReturnValue {
        type: Any
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "example.c"
      line: 56
      counter: 5
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      expectedReturnValue {
        type: Any
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "example.c"
      line: 63
      counter: 6
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      expectedReturnValue {
        type: Any
      }
      strict: false
    }
  }
}
root {
  identifier {
    location {
      filename: "example.c"
      line: 75
      counter: 7
    }
  }
  beginning {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Entry
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      strict: false
    }
  }
  end {
    type: FUNCTION
    function {
      function {
        name: "example_syscall"
      }
      direction: Exit
      context: Callee
      argument {
        type: Any
        name: "cred"
      }
      argument {
        type: Any
        name: "index"
      }
      argument {
        type: Any
        name: "op"
      }
      expectedReturnValue {
        type: Any
      }
      strict: false
    }
  }
}
