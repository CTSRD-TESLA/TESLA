identifier {
  location {
    filename: "crypto.c"
    line: 52
    counter: 0
  }
}
context: ThreadLocal
expression {
  type: SEQUENCE
  sequence {
    expression {
      type: FUNCTION
      function {
        function {
          name: "example_syscall"
        }
        direction: Entry
        context: Callee
        argument {
          type: Any
          name: "cred"
        }
        argument {
          type: Any
          name: "index"
        }
        argument {
          type: Any
          name: "op"
        }
      }
    }
    expression {
      type: FUNCTION
      function {
        function {
          name: "DES_set_key"
        }
        direction: Exit
        context: Caller
        argument {
          type: Variable
          index: 0
          name: "key"
        }
        argument {
          type: Variable
          index: 1
          name: "schedule"
        }
        expectedReturnValue {
          type: Constant
          name: "since"
          value: 1
        }
      }
    }
    expression {
      type: NOW
      now {
        location {
          filename: "crypto.c"
          line: 52
          counter: 0
        }
      }
    }
  }
}
argument {
  type: Variable
  index: 0
  name: "key"
}
argument {
  type: Variable
  index: 1
  name: "schedule"
}
===
identifier {
  name: "my_tcpcb_assertion"
}
context: Global
expression {
  type: SEQUENCE
  sequence {
    expression {
      type: FIELD_ASSIGN
      fieldAssign {
        type: "tcpcb"
        index: 5
        base {
          type: Variable
          index: 0
          name: "tp"
        }
        operation: SimpleAssign
        value {
          type: Constant
          name: "TCPS_CLOSED"
          value: 0
        }
        fieldName: "t_state"
      }
    }
    expression {
      type: BOOLEAN_EXPR
      booleanExpr {
        operation: BE_Xor
        expression {
          type: BOOLEAN_EXPR
          booleanExpr {
            operation: BE_Xor
            expression {
              type: SEQUENCE
              sequence {
                expression {
                  type: NULL_EXPR
                }
                expression {
                  type: FIELD_ASSIGN
                  fieldAssign {
                    type: "tcpcb"
                    index: 5
                    base {
                      type: Variable
                      index: 0
                      name: "tp"
                    }
                    operation: SimpleAssign
                    value {
                      type: Constant
                      name: "TCPS_LISTEN"
                      value: 1
                    }
                    fieldName: "t_state"
                  }
                }
                expression {
                  type: BOOLEAN_EXPR
                  booleanExpr {
                    operation: BE_Xor
                    expression {
                      type: NULL_EXPR
                    }
                    expression {
                      type: FIELD_ASSIGN
                      fieldAssign {
                        type: "tcpcb"
                        index: 5
                        base {
                          type: Variable
                          index: 0
                          name: "tp"
                        }
                        operation: SimpleAssign
                        value {
                          type: Constant
                          name: "optional"
                          value: 0
                        }
                        fieldName: "t_state"
                      }
                    }
                  }
                }
                expression {
                  type: FUNCTION
                  function {
                    function {
                      name: "tcp_free"
                    }
                    direction: Entry
                    context: Callee
                    argument {
                      type: Variable
                      index: 0
                      name: "tp"
                    }
                  }
                }
              }
            }
            expression {
              type: SEQUENCE
              sequence {
                expression {
                  type: NULL_EXPR
                }
                expression {
                  type: BOOLEAN_EXPR
                  booleanExpr {
                    operation: BE_Xor
                    expression {
                      type: NULL_EXPR
                    }
                    expression {
                      type: FIELD_ASSIGN
                      fieldAssign {
                        type: "tcpcb"
                        index: 5
                        base {
                          type: Variable
                          index: 0
                          name: "tp"
                        }
                        operation: SimpleAssign
                        value {
                          type: Constant
                          name: "optional"
                          value: 2
                        }
                        fieldName: "t_state"
                      }
                    }
                  }
                }
                expression {
                  type: BOOLEAN_EXPR
                  booleanExpr {
                    operation: BE_Xor
                    expression {
                      type: SEQUENCE
                      sequence {
                        expression {
                          type: NULL_EXPR
                        }
                        expression {
                          type: FIELD_ASSIGN
                          fieldAssign {
                            type: "tcpcb"
                            index: 5
                            base {
                              type: Variable
                              index: 0
                              name: "tp"
                            }
                            operation: SimpleAssign
                            value {
                              type: Constant
                              name: "TSEQUENCE"
                              value: 3
                            }
                            fieldName: "t_state"
                          }
                        }
                        expression {
                          type: BOOLEAN_EXPR
                          booleanExpr {
                            operation: BE_Xor
                            expression {
                              type: SUB_AUTOMATON
                              subAutomaton {
                                name: "established"
                              }
                            }
                            expression {
                              type: SUB_AUTOMATON
                              subAutomaton {
                                name: "active_close"
                              }
                            }
                          }
                        }
                      }
                    }
                    expression {
                      type: SUB_AUTOMATON
                      subAutomaton {
                        name: "established"
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expression {
          type: FUNCTION
          function {
            function {
              name: "tcp_free"
            }
            direction: Entry
            context: Callee
            argument {
              type: Variable
              index: 0
              name: "tp"
            }
          }
        }
      }
    }
  }
}
argument {
  type: Variable
  index: 0
  name: "tp"
}
===
identifier {
  name: "active_close"
}
context: Global
expression {
  type: SEQUENCE
  sequence {
    expression {
      type: FIELD_ASSIGN
      fieldAssign {
        type: "tcpcb"
        index: 5
        base {
          type: Variable
          index: 0
          name: "tp"
        }
        operation: SimpleAssign
        value {
          type: Constant
          name: "TCPS_FIN_WAIT_1"
          value: 6
        }
        fieldName: "t_state"
      }
    }
    expression {
      type: BOOLEAN_EXPR
      booleanExpr {
        operation: BE_Xor
        expression {
          type: SEQUENCE
          sequence {
            expression {
              type: NULL_EXPR
            }
            expression {
              type: FIELD_ASSIGN
              fieldAssign {
                type: "tcpcb"
                index: 5
                base {
                  type: Variable
                  index: 0
                  name: "tp"
                }
                operation: SimpleAssign
                value {
                  type: Constant
                  name: "TCPS_CLOSING"
                  value: 7
                }
                fieldName: "t_state"
              }
            }
            expression {
              type: FIELD_ASSIGN
              fieldAssign {
                type: "tcpcb"
                index: 5
                base {
                  type: Variable
                  index: 0
                  name: "tp"
                }
                operation: SimpleAssign
                value {
                  type: Constant
                  name: "TCPS_TIME_WAIT"
                  value: 10
                }
                fieldName: "t_state"
              }
            }
          }
        }
        expression {
          type: SEQUENCE
          sequence {
            expression {
              type: NULL_EXPR
            }
            expression {
              type: FIELD_ASSIGN
              fieldAssign {
                type: "tcpcb"
                index: 5
                base {
                  type: Variable
                  index: 0
                  name: "tp"
                }
                operation: SimpleAssign
                value {
                  type: Constant
                  name: "TCPS_FIN_WAIT_2"
                  value: 9
                }
                fieldName: "t_state"
              }
            }
            expression {
              type: FIELD_ASSIGN
              fieldAssign {
                type: "tcpcb"
                index: 5
                base {
                  type: Variable
                  index: 0
                  name: "tp"
                }
                operation: SimpleAssign
                value {
                  type: Constant
                  name: "TCPS_TIME_WAIT"
                  value: 10
                }
                fieldName: "t_state"
              }
            }
          }
        }
      }
    }
    expression {
      type: FIELD_ASSIGN
      fieldAssign {
        type: "tcpcb"
        index: 5
        base {
          type: Variable
          index: 0
          name: "tp"
        }
        operation: SimpleAssign
        value {
          type: Constant
          name: "TCPS_CLOSED"
          value: 0
        }
        fieldName: "t_state"
      }
    }
    expression {
      type: FUNCTION
      function {
        function {
          name: "tcp_free"
        }
        direction: Entry
        context: Callee
        argument {
          type: Variable
          index: 0
          name: "tp"
        }
      }
    }
  }
}
argument {
  type: Variable
  index: 0
  name: "tp"
}
===
identifier {
  name: "established"
}
context: Global
expression {
  type: SEQUENCE
  sequence {
    expression {
      type: FIELD_ASSIGN
      fieldAssign {
        type: "tcpcb"
        index: 5
        base {
          type: Variable
          index: 0
          name: "tp"
        }
        operation: SimpleAssign
        value {
          type: Constant
          name: "TCPS_ESTABLISHED"
          value: 4
        }
        fieldName: "t_state"
      }
    }
    expression {
      type: BOOLEAN_EXPR
      booleanExpr {
        operation: BE_Xor
        expression {
          type: SUB_AUTOMATON
          subAutomaton {
            name: "active_close"
          }
        }
        expression {
          type: SEQUENCE
          sequence {
            expression {
              type: NULL_EXPR
            }
            expression {
              type: FIELD_ASSIGN
              fieldAssign {
                type: "tcpcb"
                index: 5
                base {
                  type: Variable
                  index: 0
                  name: "tp"
                }
                operation: SimpleAssign
                value {
                  type: Constant
                  name: "TCPS_CLOSE_WAIT"
                  value: 5
                }
                fieldName: "t_state"
              }
            }
            expression {
              type: FIELD_ASSIGN
              fieldAssign {
                type: "tcpcb"
                index: 5
                base {
                  type: Variable
                  index: 0
                  name: "tp"
                }
                operation: SimpleAssign
                value {
                  type: Constant
                  name: "TCPS_LAST_ACK"
                  value: 8
                }
                fieldName: "t_state"
              }
            }
            expression {
              type: BOOLEAN_EXPR
              booleanExpr {
                operation: BE_Xor
                expression {
                  type: NULL_EXPR
                }
                expression {
                  type: FIELD_ASSIGN
                  fieldAssign {
                    type: "tcpcb"
                    index: 5
                    base {
                      type: Variable
                      index: 0
                      name: "tp"
                    }
                    operation: SimpleAssign
                    value {
                      type: Constant
                      name: "optional"
                      value: 0
                    }
                    fieldName: "t_state"
                  }
                }
              }
            }
          }
        }
      }
    }
    expression {
      type: FUNCTION
      function {
        function {
          name: "tcp_free"
        }
        direction: Entry
        context: Callee
        argument {
          type: Variable
          index: 0
          name: "tp"
        }
      }
    }
  }
}
argument {
  type: Variable
  index: 0
  name: "tp"
}
===
identifier {
  location {
    filename: "example.c"
    line: 46
    counter: 0
  }
}
context: ThreadLocal
expression {
  type: SEQUENCE
  sequence {
    expression {
      type: FUNCTION
      function {
        function {
          name: "example_syscall"
        }
        direction: Entry
        context: Callee
        argument {
          type: Any
          name: "cred"
        }
        argument {
          type: Any
          name: "index"
        }
        argument {
          type: Any
          name: "op"
        }
      }
    }
    expression {
      type: FUNCTION
      function {
        function {
          name: "security_check"
        }
        direction: Exit
        context: Callee
        argument {
          type: Any
        }
        argument {
          type: Variable
          index: 0
          name: "o"
        }
        argument {
          type: Variable
          index: 1
          name: "op"
        }
        expectedReturnValue {
          type: Constant
          name: "since"
          value: 0
        }
      }
    }
    expression {
      type: NOW
      now {
        location {
          filename: "example.c"
          line: 46
          counter: 0
        }
      }
    }
  }
}
argument {
  type: Variable
  index: 0
  name: "o"
}
argument {
  type: Variable
  index: 1
  name: "op"
}
===
identifier {
  location {
    filename: "example.c"
    line: 49
    counter: 1
  }
}
context: ThreadLocal
expression {
  type: SEQUENCE
  sequence {
    expression {
      type: FUNCTION
      function {
        function {
          name: "example_syscall"
        }
        direction: Entry
        context: Callee
        argument {
          type: Any
          name: "cred"
        }
        argument {
          type: Any
          name: "index"
        }
        argument {
          type: Any
          name: "op"
        }
      }
    }
    expression {
      type: FUNCTION
      function {
        function {
          name: "security_check"
        }
        direction: Entry
        context: Callee
        argument {
          type: Any
          name: "subject"
        }
        argument {
          type: Any
          name: "object"
        }
        argument {
          type: Any
          name: "op"
        }
      }
    }
    expression {
      type: NOW
      now {
        location {
          filename: "example.c"
          line: 49
          counter: 1
        }
      }
    }
  }
}
===
identifier {
  location {
    filename: "example.c"
    line: 52
    counter: 2
  }
}
context: ThreadLocal
expression {
  type: SEQUENCE
  sequence {
    expression {
      type: FUNCTION
      function {
        function {
          name: "example_syscall"
        }
        direction: Entry
        context: Callee
        argument {
          type: Any
          name: "cred"
        }
        argument {
          type: Any
          name: "index"
        }
        argument {
          type: Any
          name: "op"
        }
      }
    }
    expression {
      type: FUNCTION
      function {
        function {
          name: "hold"
        }
        direction: Entry
        context: Callee
        argument {
          type: Variable
          index: 0
          name: "o"
        }
      }
    }
    expression {
      type: NOW
      now {
        location {
          filename: "example.c"
          line: 52
          counter: 2
        }
      }
    }
  }
}
argument {
  type: Variable
  index: 0
  name: "o"
}
===
identifier {
  location {
    filename: "example.c"
    line: 53
    counter: 3
  }
}
context: ThreadLocal
expression {
  type: SEQUENCE
  sequence {
    expression {
      type: FUNCTION
      function {
        function {
          name: "example_syscall"
        }
        direction: Entry
        context: Callee
        argument {
          type: Any
          name: "cred"
        }
        argument {
          type: Any
          name: "index"
        }
        argument {
          type: Any
          name: "op"
        }
      }
    }
    expression {
      type: FUNCTION
      function {
        function {
          name: "hold"
        }
        direction: Exit
        context: Callee
        argument {
          type: Variable
          index: 0
          name: "o"
        }
      }
    }
    expression {
      type: NOW
      now {
        location {
          filename: "example.c"
          line: 53
          counter: 3
        }
      }
    }
  }
}
argument {
  type: Variable
  index: 0
  name: "o"
}
===
identifier {
  location {
    filename: "example.c"
    line: 54
    counter: 4
  }
}
context: ThreadLocal
expression {
  type: SEQUENCE
  sequence {
    expression {
      type: NOW
      now {
        location {
          filename: "example.c"
          line: 54
          counter: 4
        }
      }
    }
    expression {
      type: FUNCTION
      function {
        function {
          name: "release"
        }
        direction: Entry
        context: Callee
        argument {
          type: Variable
          index: 0
          name: "o"
        }
      }
    }
    expression {
      type: FUNCTION
      function {
        function {
          name: "example_syscall"
        }
        direction: Exit
        context: Callee
        argument {
          type: Any
          name: "cred"
        }
        argument {
          type: Any
          name: "index"
        }
        argument {
          type: Any
          name: "op"
        }
        expectedReturnValue {
          type: Any
        }
      }
    }
  }
}
argument {
  type: Variable
  index: 0
  name: "o"
}
===
identifier {
  location {
    filename: "example.c"
    line: 57
    counter: 5
  }
}
context: ThreadLocal
expression {
  type: SEQUENCE
  sequence {
    expression {
      type: FUNCTION
      function {
        function {
          name: "example_syscall"
        }
        direction: Entry
        context: Callee
        argument {
          type: Any
          name: "cred"
        }
        argument {
          type: Any
          name: "index"
        }
        argument {
          type: Any
          name: "op"
        }
      }
    }
    expression {
      type: FIELD_ASSIGN
      fieldAssign {
        type: "object"
        index: 0
        base {
          type: Variable
          index: 0
          name: "o"
        }
        operation: PlusEqual
        value {
          type: Constant
          name: "since"
          value: 1
        }
        fieldName: "refcount"
      }
    }
    expression {
      type: NOW
      now {
        location {
          filename: "example.c"
          line: 57
          counter: 5
        }
      }
    }
  }
}
argument {
  type: Variable
  index: 0
  name: "o"
}
===
identifier {
  location {
    filename: "example.c"
    line: 64
    counter: 6
  }
}
context: ThreadLocal
expression {
  type: BOOLEAN_EXPR
  booleanExpr {
    operation: BE_Xor
    expression {
      type: SEQUENCE
      sequence {
        expression {
          type: FUNCTION
          function {
            function {
              name: "example_syscall"
            }
            direction: Entry
            context: Callee
            argument {
              type: Any
              name: "cred"
            }
            argument {
              type: Any
              name: "index"
            }
            argument {
              type: Any
              name: "op"
            }
          }
        }
        expression {
          type: FUNCTION
          function {
            function {
              name: "security_check"
            }
            direction: Exit
            context: Callee
            argument {
              type: Any
            }
            argument {
              type: Variable
              index: 0
              name: "o"
            }
            argument {
              type: Variable
              index: 1
              name: "op"
            }
            expectedReturnValue {
              type: Constant
              name: "since"
              value: 0
            }
          }
        }
        expression {
          type: NOW
          now {
            location {
              filename: "example.c"
              line: 64
              counter: 6
            }
          }
        }
      }
    }
    expression {
      type: SEQUENCE
      sequence {
        expression {
          type: NOW
          now {
            location {
              filename: "example.c"
              line: 64
              counter: 6
            }
          }
        }
        expression {
          type: FUNCTION
          function {
            function {
              name: "log_audit_record"
            }
            direction: Exit
            context: Callee
            argument {
              type: Variable
              index: 0
              name: "o"
            }
            argument {
              type: Variable
              index: 1
              name: "op"
            }
            expectedReturnValue {
              type: Constant
              name: "since"
              value: 0
            }
          }
        }
        expression {
          type: FUNCTION
          function {
            function {
              name: "example_syscall"
            }
            direction: Exit
            context: Callee
            argument {
              type: Any
              name: "cred"
            }
            argument {
              type: Any
              name: "index"
            }
            argument {
              type: Any
              name: "op"
            }
            expectedReturnValue {
              type: Any
            }
          }
        }
      }
    }
  }
}
argument {
  type: Variable
  index: 0
  name: "o"
}
argument {
  type: Variable
  index: 1
  name: "op"
}
===
identifier {
  location {
    filename: "example.c"
    line: 79
    counter: 7
  }
}
context: Global
expression {
  type: BOOLEAN_EXPR
  booleanExpr {
    operation: BE_Xor
    expression {
      type: SEQUENCE
      sequence {
        expression {
          type: NULL_EXPR
        }
        expression {
          type: FUNCTION
          function {
            function {
              name: "example_syscall"
            }
            direction: Entry
            context: Callee
            argument {
              type: Any
              name: "cred"
            }
            argument {
              type: Any
              name: "index"
            }
            argument {
              type: Any
              name: "op"
            }
          }
        }
        expression {
          type: FUNCTION
          function {
            function {
              name: "get_object"
            }
            direction: Exit
            context: Callee
            argument {
              type: Any
            }
            argument {
              type: Any
            }
            expectedReturnValue {
              type: Constant
              name: "TSEQUENCE"
              value: 0
            }
          }
        }
        expression {
          type: FUNCTION
          function {
            function {
              name: "security_check"
            }
            direction: Exit
            context: Callee
            argument {
              type: Any
            }
            argument {
              type: Variable
              index: 0
              name: "o"
            }
            argument {
              type: Variable
              index: 1
              name: "op"
            }
            expectedReturnValue {
              type: Constant
              name: "TSEQUENCE"
              value: 0
            }
          }
        }
        expression {
          type: BOOLEAN_EXPR
          booleanExpr {
            operation: BE_Xor
            expression {
              type: FUNCTION
              function {
                function {
                  name: "some_helper"
                }
                direction: Exit
                context: Callee
                argument {
                  type: Variable
                  index: 1
                  name: "op"
                }
                expectedReturnValue {
                  type: Constant
                  name: "TSEQUENCE"
                  value: 0
                }
              }
            }
            expression {
              type: FUNCTION
              function {
                function {
                  name: "never_actually_called"
                }
                direction: Entry
                context: Callee
              }
            }
          }
        }
        expression {
          type: BOOLEAN_EXPR
          booleanExpr {
            operation: BE_Xor
            expression {
              type: FUNCTION
              function {
                function {
                  name: "void_helper"
                }
                direction: Entry
                context: Callee
                argument {
                  type: Variable
                  index: 0
                  name: "o"
                }
              }
            }
            expression {
              type: FUNCTION
              function {
                function {
                  name: "void_helper2"
                }
                direction: Exit
                context: Callee
                argument {
                  type: Variable
                  index: 0
                  name: "o"
                }
              }
            }
          }
        }
        expression {
          type: FUNCTION
          function {
            function {
              name: "release"
            }
            direction: Exit
            context: Callee
            argument {
              type: Variable
              index: 0
              name: "o"
            }
          }
        }
        expression {
          type: FUNCTION
          function {
            function {
              name: "example_syscall"
            }
            direction: Exit
            context: Callee
            argument {
              type: Any
              name: "cred"
            }
            argument {
              type: Any
              name: "index"
            }
            argument {
              type: Any
              name: "op"
            }
            expectedReturnValue {
              type: Any
            }
          }
        }
      }
    }
    expression {
      type: SEQUENCE
      sequence {
        expression {
          type: NOW
          now {
            location {
              filename: "example.c"
              line: 79
              counter: 7
            }
          }
        }
        expression {
          type: FUNCTION
          function {
            function {
              name: "log_audit_record"
            }
            direction: Exit
            context: Callee
            argument {
              type: Variable
              index: 0
              name: "o"
            }
            argument {
              type: Variable
              index: 1
              name: "op"
            }
            expectedReturnValue {
              type: Constant
              name: "TSEQUENCE"
              value: 0
            }
          }
        }
        expression {
          type: FUNCTION
          function {
            function {
              name: "example_syscall"
            }
            direction: Exit
            context: Callee
            argument {
              type: Any
              name: "cred"
            }
            argument {
              type: Any
              name: "index"
            }
            argument {
              type: Any
              name: "op"
            }
            expectedReturnValue {
              type: Any
            }
          }
        }
      }
    }
  }
}
argument {
  type: Variable
  index: 0
  name: "o"
}
argument {
  type: Variable
  index: 1
  name: "op"
}
===
