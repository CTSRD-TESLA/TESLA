import os
import sys


#
# Basic information about this test suite.
#
config.name = 'TESLA'
config.suffixes = [ '.c', '.cpp', '.ll' ]
config.test_format = lit.formats.ShTest()

include_dirs = []
libdirs = []
extra_libs = []


#
# Useful environment variables.
#
# This variables are optional when TESLA is installed to a standard location;
# if not, failure to set these variables will cause tests to fail building.
#
tesla_src = os.getenv('TESLA_SOURCE_DIR')
if not tesla_src and 'source_dir' in lit.params:
	tesla_src = lit.params['source_dir']

tesla_build = os.getenv('TESLA_BUILD_DIR')
if not tesla_build and 'build_dir' in lit.params:
	tesla_build = lit.params['build_dir']


if 'extra_include_dirs' in lit.params:
	include_dirs += lit.params['extra_include_dirs'].split(os.path.pathsep)

if 'extra_libdirs' in lit.params:
	libdirs += lit.params['extra_libdirs'].split(os.path.pathsep)

if 'extra_libs' in lit.params:
	extra_libs += lit.params['extra_libs'].split(os.path.pathsep)


if 'output_dir' in lit.params:
	config.test_exec_root = lit.params['output_dir']


#
# Find the 'test_support' module (which may not be in the current PYTHONPATH).
#
sys.path.append(os.curdir)
if tesla_src: sys.path.append(os.path.join(tesla_src, 'scripts'))

try:
	import test_support as test

except ImportError, e:
	print "Unable to find 'test_support' module!"
	print "Try setting TESLA_SOURCE_DIR?"
	sys.exit(1)


#
# Find LLVM tools (e.g. FileCheck).
#
llvm_obj_root = test.llvm_config['obj-root']
llvm_tools = os.path.join(llvm_obj_root, 'bin')


#
# Find TESLA includes and libraries.
#
for (header, subdir) in [
		('libtesla.h', 'include'),
		('tesla_internal.h', os.path.join('libtesla', 'src'))
	]:

	include_dirs.append(
		test.find_include_dir(header, [ '%s/%s' % (tesla_src, subdir) ],
			'Try setting TESLA_SOURCE_DIR'))

libtesla_dir = test.find_libdir('libtesla.*',
	[ '%s/libtesla/src' % d for d in [ os.getcwd(), tesla_build ] ],
	'Try setting TESLA_BUILD_DIR')

libdirs.append(libtesla_dir)


#
# Set CFLAGS, LDFLAGS, PATH, etc.
#
config.substitutions += [
	('%cflags', test.cflags(include_dirs + [ '%p/Inputs' ])),
	('%ldflags', test.ldflags(libdirs, [ 'tesla' ], extra_libs)),
]

config.environment['PATH'] = os.path.pathsep.join([
	llvm_tools,
	os.path.join(tesla_src, 'scripts'),
	config.environment['PATH']
])

config.environment['LD_LIBRARY_PATH'] = libtesla_dir
config.environment['TESLA_BUILD_DIR'] = tesla_build
config.environment['TESLA_SOURCE_DIR'] = tesla_src

